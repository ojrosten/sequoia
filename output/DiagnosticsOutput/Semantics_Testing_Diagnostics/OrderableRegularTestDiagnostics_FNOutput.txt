Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 31
Broken check invariant

--Regular Semantics--
[sequoia::testing::orderable_regular_beast<int, std::allocator<int> >]

  Prerequisite - for checking semantics, order must be weak_ordering::less or weak_ordering::greater
  [bool]
  check failed

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 32
Broken check invariant

--Regular Semantics--
[sequoia::testing::orderable_regular_beast<int, std::allocator<int> >]

  Prerequisite - for ordered semantics, it is assumed that y > x
  [bool]
  check failed

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 38

--Regular Semantics--
[sequoia::testing::regular_broken_less<int, std::allocator<int> >]

  operator> and operator< are inconsistent
  [bool]
  check failed

  operator< and operator<= are inconsistent
  [bool]
  check failed

  operator< and operator>= are inconsistent
  [bool]
  check failed

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 44

--Regular Semantics--
[sequoia::testing::regular_broken_lesseq<int, std::allocator<int> >]

  operator< and operator<= are inconsistent
  [bool]
  check failed

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 50

--Regular Semantics--
[sequoia::testing::regular_broken_greater<int, std::allocator<int> >]

  operator> and operator< are inconsistent
  [bool]
  check failed

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 56

--Regular Semantics--
[sequoia::testing::regular_broken_greatereq<int, std::allocator<int> >]

  operator< and operator<= are inconsistent
  [bool]
  check failed

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 62

--Regular Semantics--
[sequoia::testing::regular_inverted_comparisons<int, std::allocator<int> >]

  Prerequisite - for ordered semantics, it is assumed that y > x
  [bool]
  check failed

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 68

--Regular Semantics--
[sequoia::testing::regular_broken_spaceship<int, std::allocator<int> >]

  operator< and operator<=> are inconsistent
  [bool]
  check failed

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 75
Incorrect x value

--Regular Semantics--
[sequoia::testing::orderable_regular_beast<int, std::allocator<int> >]

  x not equivalent to xEquivalent
  Comparison performed using:
  [sequoia::testing::value_tester<sequoia::testing::orderable_regular_beast<int, std::allocator<int> > >]
  Checking for weak equivalence with:
  [std::initializer_list<int>]

    Element 0 of range incorrect
    [int]
    operator== returned false
    Obtained : 1
    Predicted: 2

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 76
Incorrect y value

--Regular Semantics--
[sequoia::testing::orderable_regular_beast<int, std::allocator<int> >]

  y not equivalent to yEquivalent
  Comparison performed using:
  [sequoia::testing::value_tester<sequoia::testing::orderable_regular_beast<int, std::allocator<int> > >]
  Checking for weak equivalence with:
  [std::initializer_list<int>]

    Element 0 of range incorrect
    [int]
    operator== returned false
    Obtained : 2
    Predicted: 3

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 77
Incorrect x value; mutator

--Regular Semantics--
[sequoia::testing::orderable_regular_beast<int, std::allocator<int> >]

  x not equivalent to xEquivalent
  Comparison performed using:
  [sequoia::testing::value_tester<sequoia::testing::orderable_regular_beast<int, std::allocator<int> > >]
  Checking for weak equivalence with:
  [std::initializer_list<int>]

    Element 0 of range incorrect
    [int]
    operator== returned false
    Obtained : 1
    Predicted: 2

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 78
Incorrect y value; mutator

--Regular Semantics--
[sequoia::testing::orderable_regular_beast<int, std::allocator<int> >]

  y not equivalent to yEquivalent
  Comparison performed using:
  [sequoia::testing::value_tester<sequoia::testing::orderable_regular_beast<int, std::allocator<int> > >]
  Checking for weak equivalence with:
  [std::initializer_list<int>]

    Element 0 of range incorrect
    [int]
    operator== returned false
    Obtained : 2
    Predicted: 3

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 84
Incorrect moved-from state post construction

--Regular Semantics--
[sequoia::testing::orderable_specified_moved_from_beast<int, std::allocator<int> >]

  Incorrect moved-from value after move construction
  Comparison performed using:
  [sequoia::testing::value_tester<sequoia::testing::orderable_specified_moved_from_beast<int, std::allocator<int> > >]
  Checking for equivalence with:
  [std::vector<int, std::allocator<int> >]

    Wrapped vector
    [std::vector<int, std::allocator<int> >]
    operator== returned false

      Container size wrong
      [unsigned long long]
      operator== returned false
      Obtained : 0
      Predicted: 1

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 85
Incorrect moved-from state post construction

--Regular Semantics--
[sequoia::testing::orderable_specified_moved_from_beast<int, std::allocator<int> >]

  Incorrect moved-from value after move construction
  [sequoia::testing::orderable_specified_moved_from_beast<int, std::allocator<int> >]
  operator== returned false
  Obtained : 
  Predicted: 1

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 87
Incorrect moved-from state post assignment

--Regular Semantics--
[sequoia::testing::orderable_specified_moved_from_beast<int, std::allocator<int> >]

  Incorrect moved-from value after move assignment
  Comparison performed using:
  [sequoia::testing::value_tester<sequoia::testing::orderable_specified_moved_from_beast<int, std::allocator<int> > >]
  Checking for equivalence with:
  [std::vector<int, std::allocator<int> >]

    Wrapped vector
    [std::vector<int, std::allocator<int> >]
    operator== returned false

      Container size wrong
      [unsigned long long]
      operator== returned false
      Obtained : 0
      Predicted: 1

=======================================

Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 88
Incorrect moved-from state post assignment

--Regular Semantics--
[sequoia::testing::orderable_specified_moved_from_beast<int, std::allocator<int> >]

  Incorrect moved-from value after move assignment
  [sequoia::testing::orderable_specified_moved_from_beast<int, std::allocator<int> >]
  operator== returned false
  Obtained : 
  Predicted: 2

=======================================

