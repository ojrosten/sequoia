Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 49
Broken equality

--Regular Semantics--
[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]

  operator== is inconsistent (x)
  [bool]
  check failed

  operator== is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 60
Broken inequality

--Regular Semantics--
[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]

  operator!= is inconsistent (x)
  [bool]
  check failed

  operator!= is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 71
Broken copy

--Regular Semantics--
[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]

  Inconsistent copy constructor (x)
  [sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 82
Broken para-copy

--Regular Semantics--
[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]

  Inconsistent para-copy construction
  [sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 93
Broken move

--Regular Semantics--
[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]

  Inconsistent move construction
  [sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 104
Broken para-move

--Regular Semantics--
[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]

  Inconsistent para-move construction
  [sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 115
Broken copy assignment

--Regular Semantics--
[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]

  Inconsistent copy assignment (from y)
  [sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 126
Broken move assignment

--Regular Semantics--
[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 0> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 49
Broken equality

--Regular Semantics--
[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]

  operator== is inconsistent (x)
  [bool]
  check failed

  operator== is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 60
Broken inequality

--Regular Semantics--
[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]

  operator!= is inconsistent (x)
  [bool]
  check failed

  operator!= is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 71
Broken copy

--Regular Semantics--
[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]

  Inconsistent copy constructor (x)
  [sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 82
Broken para-copy

--Regular Semantics--
[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]

  Inconsistent para-copy construction
  [sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 93
Broken move

--Regular Semantics--
[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]

  Inconsistent move construction
  [sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 104
Broken para-move

--Regular Semantics--
[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]

  Inconsistent para-move construction
  [sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 115
Broken copy assignment

--Regular Semantics--
[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]

  Inconsistent copy assignment (from y)
  [sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 126
Broken move assignment

--Regular Semantics--
[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 0, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 49
Broken equality

--Regular Semantics--
[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]

  operator== is inconsistent (x)
  [bool]
  check failed

  operator== is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 60
Broken inequality

--Regular Semantics--
[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]

  operator!= is inconsistent (x)
  [bool]
  check failed

  operator!= is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 71
Broken copy

--Regular Semantics--
[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]

  Inconsistent copy constructor (x)
  [sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 82
Broken para-copy

--Regular Semantics--
[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]

  Inconsistent para-copy construction
  [sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 93
Broken move

--Regular Semantics--
[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]

  Inconsistent move construction
  [sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 104
Broken para-move

--Regular Semantics--
[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]

  Inconsistent para-move construction
  [sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 115
Broken copy assignment

--Regular Semantics--
[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]

  Inconsistent copy assignment (from y)
  [sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 126
Broken move assignment

--Regular Semantics--
[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 0> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 49
Broken equality

--Regular Semantics--
[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]

  operator== is inconsistent (x)
  [bool]
  check failed

  operator== is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 60
Broken inequality

--Regular Semantics--
[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]

  operator!= is inconsistent (x)
  [bool]
  check failed

  operator!= is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 71
Broken copy

--Regular Semantics--
[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]

  Inconsistent copy constructor (x)
  [sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 82
Broken para-copy

--Regular Semantics--
[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]

  Inconsistent para-copy construction
  [sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 93
Broken move

--Regular Semantics--
[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]

  Inconsistent move construction
  [sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 104
Broken para-move

--Regular Semantics--
[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]

  Inconsistent para-move construction
  [sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 115
Broken copy assignment

--Regular Semantics--
[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]

  Inconsistent copy assignment (from y)
  [sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 126
Broken move assignment

--Regular Semantics--
[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 0, 1, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 49
Broken equality

--Regular Semantics--
[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  operator== is inconsistent (x)
  [bool]
  check failed

  operator== is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 60
Broken inequality

--Regular Semantics--
[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  operator!= is inconsistent (x)
  [bool]
  check failed

  operator!= is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 71
Broken copy

--Regular Semantics--
[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Inconsistent copy constructor (x)
  [sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 82
Broken para-copy

--Regular Semantics--
[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Inconsistent para-copy construction
  [sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 93
Broken move

--Regular Semantics--
[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Inconsistent move construction
  [sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 104
Broken para-move

--Regular Semantics--
[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Inconsistent para-move construction
  [sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 115
Broken copy assignment

--Regular Semantics--
[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Inconsistent copy assignment (from y)
  [sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 126
Broken move assignment

--Regular Semantics--
[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 49
Broken equality

--Regular Semantics--
[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  operator== is inconsistent (x)
  [bool]
  check failed

  operator== is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 60
Broken inequality

--Regular Semantics--
[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  operator!= is inconsistent (x)
  [bool]
  check failed

  operator!= is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 71
Broken copy

--Regular Semantics--
[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Inconsistent copy constructor (x)
  [sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 82
Broken para-copy

--Regular Semantics--
[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Inconsistent para-copy construction
  [sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 93
Broken move

--Regular Semantics--
[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Inconsistent move construction
  [sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 104
Broken para-move

--Regular Semantics--
[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Inconsistent para-move construction
  [sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 115
Broken copy assignment

--Regular Semantics--
[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Inconsistent copy assignment (from y)
  [sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 126
Broken move assignment

--Regular Semantics--
[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 49
Broken equality

--Regular Semantics--
[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  operator== is inconsistent (x)
  [bool]
  check failed

  operator== is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 60
Broken inequality

--Regular Semantics--
[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  operator!= is inconsistent (x)
  [bool]
  check failed

  operator!= is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 71
Broken copy

--Regular Semantics--
[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Inconsistent copy constructor (x)
  [sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 82
Broken para-copy

--Regular Semantics--
[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Inconsistent para-copy construction
  [sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 93
Broken move

--Regular Semantics--
[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Inconsistent move construction
  [sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 104
Broken para-move

--Regular Semantics--
[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Inconsistent para-move construction
  [sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 115
Broken copy assignment

--Regular Semantics--
[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Inconsistent copy assignment (from y)
  [sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 126
Broken move assignment

--Regular Semantics--
[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 49
Broken equality

--Regular Semantics--
[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  operator== is inconsistent (x)
  [bool]
  check failed

  operator== is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 60
Broken inequality

--Regular Semantics--
[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  operator!= is inconsistent (x)
  [bool]
  check failed

  operator!= is inconsistent (y)
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 71
Broken copy

--Regular Semantics--
[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Inconsistent copy constructor (x)
  [sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 82
Broken para-copy

--Regular Semantics--
[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Inconsistent para-copy construction
  [sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 93
Broken move

--Regular Semantics--
[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Inconsistent move construction
  [sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 104
Broken para-move

--Regular Semantics--
[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Inconsistent para-move construction
  [sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 115
Broken copy assignment

--Regular Semantics--
[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Inconsistent copy assignment (from y)
  [sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

Tests/TestFramework/AllocationTesting/RegularAllocationTestFalsePositiveDiagnosticsBrokenSemantics.cpp, Line 126
Broken move assignment

--Regular Semantics--
[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 5 6 

=======================================

