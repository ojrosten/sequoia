Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 53
Incorrect para-move allocs

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = false
   >]
  Unexpected allocation detected for para-move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 56
Incorrect mutation allocs

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = false
   >]
  Unexpected allocation detected following mutation after assignment
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 61
Incorrect assignment allocs

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = false
   >]
  Unexpected allocation detected for move assignment (x)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 65
Move-only beast

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = false
   >]
  Unexpected allocation detected for initialization (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 2

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = false
   >]
  Unexpected allocation detected for para-move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 2

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 71
check_semantics return value (x)

[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
operator== returned false
Obtained : 
Predicted: 2

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 72
check_semantics return value (y)

[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
operator== returned false
Obtained : 2

Predicted: 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 83
Broken move

--Move-only Semantics--
[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Inconsistent move construction
  [sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

  Inconsistent move construction
  [sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 2 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 95
Broken move assignment

--Move-only Semantics--
[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 1 
  Predicted: 2 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 121
Inefficient move

--Move-only Semantics--
[sequoia::testing::move_only_inefficient_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = false
   >]
  Unexpected allocation detected for move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 133
Inefficient move assignment

--Move-only Semantics--
[sequoia::testing::move_only_inefficient_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = false
   >]
  Unexpected allocation detected for move assignment (x)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 146
Invariant violated: x != xClone

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Precondition - for checking move-only semantics, xand xClone are assumed to be equal
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 149
Invariant violated: y != YClone

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Precondition - for checking move-only semantics, yand yClone are assumed to be equal
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 152
Invariant violated: x == y

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Precondition - for checking semantics, x and y are assumed to be different
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 165
Incorrect moved-from state post construction

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Incorrect moved-from value after move construction
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 168
Incorrect moved-from state post construction

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Incorrect moved-from value after move construction
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 171
Incorrect moved-from state post assignment

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Incorrect moved-from value after move assignment
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 174
Incorrect moved-from state post assignment

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]

  Incorrect moved-from value after move assignment
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 53
Incorrect para-move allocs

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = true
   >]
  Unexpected allocation detected for para-move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 56
Incorrect mutation allocs

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = true
   >]
  Unexpected allocation detected following mutation after assignment
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 61
Incorrect assignment allocs

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = true
   >]
  Unexpected allocation detected for move assignment (x)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 65
Move-only beast

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = true
   >]
  Unexpected allocation detected for initialization (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 2

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = true
   >]
  Unexpected allocation detected for para-move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 2

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 71
check_semantics return value (x)

[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
operator== returned false
Obtained : 
Predicted: 2

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 72
check_semantics return value (y)

[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
operator== returned false
Obtained : 2

Predicted: 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 83
Broken move

--Move-only Semantics--
[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Inconsistent move construction
  [sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

  Inconsistent move construction
  [sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 2 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 95
Broken move assignment

--Move-only Semantics--
[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 2 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 109
Broken swap

--Move-only Semantics--
[sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Inconsistent Swap (y)
  [sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 2 
  Predicted: 1 

  Inconsistent Swap (x)
  [sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 2 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 121
Inefficient move

--Move-only Semantics--
[sequoia::testing::move_only_inefficient_move<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = true
   >]
  Unexpected allocation detected for move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 133
Inefficient move assignment

--Move-only Semantics--
[sequoia::testing::move_only_inefficient_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = false,
  		Propagate on swap = true
   >]
  Unexpected allocation detected for move assignment (x)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 146
Invariant violated: x != xClone

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Precondition - for checking move-only semantics, xand xClone are assumed to be equal
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 149
Invariant violated: y != YClone

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Precondition - for checking move-only semantics, yand yClone are assumed to be equal
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 152
Invariant violated: x == y

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Precondition - for checking semantics, x and y are assumed to be different
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 165
Incorrect moved-from state post construction

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Incorrect moved-from value after move construction
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 168
Incorrect moved-from state post construction

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Incorrect moved-from value after move construction
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 171
Incorrect moved-from state post assignment

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Incorrect moved-from value after move assignment
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 174
Incorrect moved-from state post assignment

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]

  Incorrect moved-from value after move assignment
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 0, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 53
Incorrect para-move allocs

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = false
   >]
  Unexpected allocation detected for para-move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 56
Incorrect mutation allocs

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = false
   >]
  Unexpected allocation detected following mutation after assignment
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 65
Move-only beast

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = false
   >]
  Unexpected allocation detected for initialization (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 2

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = false
   >]
  Unexpected allocation detected for para-move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 2

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 71
check_semantics return value (x)

[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
operator== returned false
Obtained : 
Predicted: 2

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 72
check_semantics return value (y)

[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
operator== returned false
Obtained : 2

Predicted: 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 83
Broken move

--Move-only Semantics--
[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Inconsistent move construction
  [sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

  Inconsistent move construction
  [sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 2 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 95
Broken move assignment

--Move-only Semantics--
[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 1 
  Predicted: 2 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 121
Inefficient move

--Move-only Semantics--
[sequoia::testing::move_only_inefficient_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = false
   >]
  Unexpected allocation detected for move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 133
Inefficient move assignment

--Move-only Semantics--
[sequoia::testing::move_only_inefficient_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = false
   >]
  Unexpected allocation detected for propagating move assignment (x)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 146
Invariant violated: x != xClone

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Precondition - for checking move-only semantics, xand xClone are assumed to be equal
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 149
Invariant violated: y != YClone

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Precondition - for checking move-only semantics, yand yClone are assumed to be equal
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 152
Invariant violated: x == y

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Precondition - for checking semantics, x and y are assumed to be different
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 165
Incorrect moved-from state post construction

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Incorrect moved-from value after move construction
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 168
Incorrect moved-from state post construction

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Incorrect moved-from value after move construction
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 171
Incorrect moved-from state post assignment

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Incorrect moved-from value after move assignment
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 174
Incorrect moved-from state post assignment

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]

  Incorrect moved-from value after move assignment
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 0> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 53
Incorrect para-move allocs

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = true
   >]
  Unexpected allocation detected for para-move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 56
Incorrect mutation allocs

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = true
   >]
  Unexpected allocation detected following mutation after assignment
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 65
Move-only beast

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = true
   >]
  Unexpected allocation detected for initialization (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 2

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = true
   >]
  Unexpected allocation detected for para-move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 2

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 71
check_semantics return value (x)

[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
operator== returned false
Obtained : 
Predicted: 2

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 72
check_semantics return value (y)

[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
operator== returned false
Obtained : 2

Predicted: 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 83
Broken move

--Move-only Semantics--
[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Inconsistent move construction
  [sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 1 

  Inconsistent move construction
  [sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 2 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 95
Broken move assignment

--Move-only Semantics--
[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Inconsistent move assignment (from y)
  [sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 2 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 109
Broken swap

--Move-only Semantics--
[sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Inconsistent Swap (y)
  [sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 2 
  Predicted: 1 

  Inconsistent Swap (x)
  [sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 1 
  Predicted: 2 

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 121
Inefficient move

--Move-only Semantics--
[sequoia::testing::move_only_inefficient_move<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = true
   >]
  Unexpected allocation detected for move construction (y)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 133
Inefficient move assignment

--Move-only Semantics--
[sequoia::testing::move_only_inefficient_move_assignment<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  [shared_counting_allocator<
  		int,
  		Propagate on copy assignment = true,
  		Propagate on move assignment = true,
  		Propagate on swap = true
   >]
  Unexpected allocation detected for propagating move assignment (x)
  [int]
  operator== returned false
  Obtained : 1
  Predicted: 0

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 146
Invariant violated: x != xClone

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Precondition - for checking move-only semantics, xand xClone are assumed to be equal
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 149
Invariant violated: y != YClone

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Precondition - for checking move-only semantics, yand yClone are assumed to be equal
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 152
Invariant violated: x == y

--Move-only Semantics--
[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Precondition - for checking semantics, x and y are assumed to be different
  [bool]
  check failed

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 165
Incorrect moved-from state post construction

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Incorrect moved-from value after move construction
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 168
Incorrect moved-from state post construction

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Incorrect moved-from value after move construction
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 171
Incorrect moved-from state post assignment

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Incorrect moved-from value after move assignment
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

Tests/TestFramework/AllocationTesting/MoveOnlyAllocationTestDiagnostics.cpp, Line 174
Incorrect moved-from state post assignment

--Move-only Semantics--
[sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]

  Incorrect moved-from value after move assignment
  [sequoia::testing::specified_moved_from_beast<int, sequoia::testing::shared_counting_allocator<int, 1, 1, 1> >]
  operator== returned false
  Obtained : 
  Predicted: 3

=======================================

