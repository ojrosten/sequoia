	Tests/TestFramework/CoreDiagnostics.cpp, Line 181

	[bool]
	check failed

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 182

	[bool]
	check failed
	Advice: I pity the fool who confuses the bool.

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 185
	Advisor ignored

	[bool]
	check failed

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 189
	Integers which should compare different

	[int]
	operator== returned false
	Obtained : 5
	Predicted: 4

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 190

	[double]
	operator== returned false
	Obtained : 6.5
	Predicted: 5.6
	Advice: Double, double, toil and trouble

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 197
	Exception expected but nothing thrown

	Expected Exception Type:
	[std::runtime_error]
	No exception thrown

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 198
	Exception thrown but of wrong type

	Expected Exception Type:
	[std::runtime_error]
	Unexpected exception thrown (caught by std::exception&):
	"Error"

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 199
	Exception thrown but of unknown type

	Expected Exception Type:
	[std::runtime_error]
	Unknown exception thrown

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 204

	[std::pair<int, double>]
	operator== returned false

	  Second element of pair is incorrect
	  [double]
	  operator== returned false
	  Obtained : 7.8
	  Predicted: -7.8

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 205

	[std::pair<int, double>]
	operator== returned false

	  First element of pair is incorrect
	  [int]
	  operator== returned false
	  Obtained : 5
	  Predicted: -5

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 206

	[std::pair<int, double>]
	operator== returned false

	  First element of pair is incorrect
	  [int]
	  operator== returned false
	  Obtained : 5
	  Predicted: -5
	  Advice: Integer advice

	  Second element of pair is incorrect
	  [double]
	  operator== returned false
	  Obtained : 7.8
	  Predicted: 6.8
	  Advice: Double advice

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 207

	[std::pair<int, double>]
	operator== returned false

	  Second element of pair is incorrect
	  [double]
	  operator== returned false
	  Obtained : 7.8
	  Predicted: -7.8

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 208

	Comparison performed using:
	[sequoia::testing::value_tester<std::pair<int const&, double> >]
	Checking for equivalence with:
	[std::pair<int, double const&>]

	  First element of pair is incorrect
	  [int]
	  operator== returned false
	  Obtained : 5
	  Predicted: -5

	  Second element of pair is incorrect
	  [double]
	  operator== returned false
	  Obtained : 7.8
	  Predicted: 6.8

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 209

	Comparison performed using:
	[sequoia::testing::value_tester<std::pair<int const&, double> >]
	Checking for weak equivalence with:
	[std::pair<int, double const&>]

	  First element of pair is incorrect
	  [int]
	  operator== returned false
	  Obtained : 5
	  Predicted: -5

	  Second element of pair is incorrect
	  [double]
	  operator== returned false
	  Obtained : 7.8
	  Predicted: 6.8

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 211

	[std::tuple<int, double, float>]
	operator== returned false

	  Element 0 of tuple incorrect
	  [int]
	  operator== returned false
	  Obtained : 4
	  Predicted: 0

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 212

	[std::tuple<int, double, float>]
	operator== returned false

	  Element 1 of tuple incorrect
	  [double]
	  operator== returned false
	  Obtained : 3.4
	  Predicted: 0
	  Advice: Double advice

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 213

	[std::tuple<int, double, float>]
	operator== returned false

	  Element 2 of tuple incorrect
	  [float]
	  operator== returned false
	  Obtained : -9.2
	  Predicted: -0

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 214

	Comparison performed using:
	[sequoia::testing::value_tester<std::tuple<int const&, double> >]
	Checking for equivalence with:
	[std::tuple<int, double const&>]

	  Element 0 of tuple incorrect
	  [int]
	  operator== returned false
	  Obtained : 5
	  Predicted: -5

	  Element 1 of tuple incorrect
	  [double]
	  operator== returned false
	  Obtained : 7.8
	  Predicted: 6.8

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 221

	[std::variant<int, double>]
	operator== returned false

	  Variant Index
	  [unsigned long long]
	  operator== returned false
	  Obtained : 0
	  Predicted: 1

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 222

	[std::variant<int, double>]
	operator== returned false

	  Variant Contents
	  [int]
	  operator== returned false
	  Obtained : 1
	  Predicted: 2

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 223

	[std::variant<int, double>]
	operator== returned false

	  Variant Contents
	  [double]
	  operator== returned false
	  Obtained : -0.1
	  Predicted: 0

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 229

	[std::optional<int>]
	operator== returned false

	  Has value
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 230

	[std::optional<int>]
	operator== returned false

	  Has value
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 231

	[std::optional<int>]
	operator== returned false

	  Contents of optional
	  [int]
	  operator== returned false
	  Obtained : 2
	  Predicted: 0

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 236
	Empty vector check which should fail

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	  Container size wrong
	  [unsigned long long]
	  operator== returned false
	  Obtained : 0
	  Predicted: 1

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 237
	One element vector check which should fail due to wrong value

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	  Element 0 of range incorrect
	  [double]
	  operator== returned false
	  Obtained : 1
	  Predicted: 2
	  Advice: Vector element advice

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 239
	One element vector check which should fail due to differing sizes

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	  Container size wrong
	  [unsigned long long]
	  operator== returned false
	  Obtained : 1
	  Predicted: 2

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 240
	Multi-element vector comparison which should fail due to last element

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	  Element 1 of range incorrect
	  [double]
	  operator== returned false
	  Obtained : 5
	  Predicted: 4

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 241
	Multi-element vector comparison which should fail due to first element

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	  Element 0 of range incorrect
	  [double]
	  operator== returned false
	  Obtained : 1
	  Predicted: 0

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 242
	Multi-element vector comparison which should fail due to middle element

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	  Element 1 of range incorrect
	  [double]
	  operator== returned false
	  Obtained : 3.2
	  Predicted: 3.3

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 243
	Multi-element vector comparison which should fail due to different sizes

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	  Container size wrong
	  [unsigned long long]
	  operator== returned false
	  Obtained : 3
	  Predicted: 2

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 247
	Iterators demarcate differing numbers of elements

	  Container size wrong
	  [unsigned long long]
	  operator== returned false
	  Obtained : 4
	  Predicted: 6

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 248
	Iterators demarcate differing elements

	  Element 0 of range incorrect
	  [float]
	  operator== returned false
	  Obtained : -4.3
	  Predicted: 1.1

	  Element 1 of range incorrect
	  [float]
	  operator== returned false
	  Obtained : 2.8
	  Predicted: -4.3

	  Element 2 of range incorrect
	  [float]
	  operator== returned false
	  Obtained : 6.2
	  Predicted: 2.8

	  Element 3 of range incorrect
	  [float]
	  operator== returned false
	  Obtained : 7.3
	  Predicted: 6.2

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 254
	Empty and non-empty strings

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too short
	  [unsigned long long]
	  operator== returned false
	  Obtained : 0
	  Predicted: 13

	  First missing character: H
	  Full strings:
	  Obtained : 
	  Predicted: Hello, World!

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 255
	Empty and non-empty strings

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too long
	  [unsigned long long]
	  operator== returned false
	  Obtained : 13
	  Predicted: 0

	  First excess character: H
	  Full strings:
	  Obtained : Hello, World!
	  Predicted: 

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 256
	Strings of differing length

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 0:
	  [char]
	  operator== returned false
	  Obtained : w
	  Predicted: H

	  Full strings:
	  Obtained : what?!
	  Predicted: Hello, World!

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 257
	Differing strings of same length

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 7:
	  [char]
	  operator== returned false
	  Obtained : w
	  Predicted: W

	  Full strings:
	  Obtained : Hello, world?
	  Predicted: Hello, World!

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 258
	Advice

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false
	Advice: Foo, my old nemesis

	  First difference detected at character 0:
	  [char]
	  operator== returned false
	  Obtained : F
	  Predicted: B

	  Full strings:
	  Obtained : Foo
	  Predicted: Bar

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 264
	Empty string compared with long string

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too short
	  [unsigned long long]
	  operator== returned false
	  Obtained : 0
	  Predicted: 110

	  First missing character: T
	  Surrounding substring(s):
	  Obtained : 
	  Predicted: This is a message which is sufficiently long for only a segm...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 265
	Long string with empty string

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too long
	  [unsigned long long]
	  operator== returned false
	  Obtained : 110
	  Predicted: 0

	  First excess character: T
	  Surrounding substring(s):
	  Obtained : This is a message which is sufficiently long for only a segm...
	  Predicted: 

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 267
	Short string compared with long string

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too short
	  [unsigned long long]
	  operator== returned false
	  Obtained : 14
	  Predicted: 110

	  First missing character: a
	  Surrounding substring(s):
	  Obtained : This is a mess
	  Predicted: This is a message which is sufficiently long for only a segm...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 268
	Long string with short string

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too long
	  [unsigned long long]
	  operator== returned false
	  Obtained : 110
	  Predicted: 14

	  First excess character: a
	  Surrounding substring(s):
	  Obtained : This is a message which is sufficiently long for only a segm...
	  Predicted: This is a mess

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 270
	Strings differing by a newline

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: ,

	  Surrounding substring(s):
	  Obtained : ...\nWorld
	  Predicted: ..., World

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 271
	Strings differing by a newline

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : ,
	  Predicted: '\n'

	  Surrounding substring(s):
	  Obtained : ..., World
	  Predicted: ...\nWorld

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 272
	Strings differing by a newline at the start

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 0:
	  [char]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: H

	  Full strings:
	  Obtained : \nHello, World
	  Predicted: Hello, World

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 273
	Strings differing by a newline at the start

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 0:
	  [char]
	  operator== returned false
	  Obtained : H
	  Predicted: '\n'

	  Full strings:
	  Obtained : Hello, World
	  Predicted: \nHello, World

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 274
	Empty string compared with newline

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too short
	  [unsigned long long]
	  operator== returned false
	  Obtained : 0
	  Predicted: 1

	  First missing character: '\n'
	  Full strings:
	  Obtained : 
	  Predicted: \n

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 275
	Empty string compared with newline

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too long
	  [unsigned long long]
	  operator== returned false
	  Obtained : 1
	  Predicted: 0

	  First excess character: '\n'
	  Full strings:
	  Obtained : \n
	  Predicted: 

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 276
	Strings differing from newline onwards

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : ,
	  Predicted: '\n'

	  Surrounding substring(s):
	  Obtained : ..., World
	  Predicted: ...\n

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 277
	Strings differing from newline onwards

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: ,

	  Surrounding substring(s):
	  Obtained : ...\n
	  Predicted: ..., World

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 278
	Strings differing from newline onwards

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : ,
	  Predicted: '\n'

	  Surrounding substring(s):
	  Obtained : ..., World
	  Predicted: ...\nPeople

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 279
	Strings differing from newline onwards

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: ,

	  Surrounding substring(s):
	  Obtained : ...\nPeople
	  Predicted: ..., World

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 280
	Output suppressed by a new line

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : ' '
	  Predicted: ,

	  Surrounding substring(s):
	  Obtained : Hello  World...
	  Predicted: Hello, World...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 281
	Difference on the second line

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected on line 2:
	  [char]
	  operator== returned false
	  Obtained : u
	  Predicted: o

	  Surrounding substring(s):
	  Obtained : ...\nAnd so furth
	  Predicted: ...\nAnd so forth

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 282
	Missing line

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected on line 2:
	  [char]
	  operator== returned false
	  Obtained : A
	  Predicted: '\n'

	  Surrounding substring(s):
	  Obtained : ...\nAnd so forth
	  Predicted: ...\n\n...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 283
	Extra line

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected on line 2:
	  [char]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: A

	  Surrounding substring(s):
	  Obtained : ...\n\n...
	  Predicted: ...\nAnd so forth

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 285
	Long strings compared with difference near middle

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 75:
	  [char]
	  operator== returned false
	  Obtained : x
	  Predicted: d

	  Surrounding substring(s):
	  Obtained : ...for only a segment to be incluxed when a string diff is perf...
	  Predicted: ...for only a segment to be included when a string diff is perf...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 286
	Long strings compared with difference near middle

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 75:
	  [char]
	  operator== returned false
	  Obtained : d
	  Predicted: x

	  Surrounding substring(s):
	  Obtained : ...for only a segment to be included when a string diff is perf...
	  Predicted: ...for only a segment to be incluxed when a string diff is perf...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 288
	Long strings compared with difference near end

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 100:
	  [char]
	  operator== returned false
	  Obtained : x
	  Predicted: ' '

	  Surrounding substring(s):
	  Obtained : ...included when a string diff isxperformed
	  Predicted: ...included when a string diff is performed

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 289
	Long strings compared with difference near end

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	  First difference detected at character 100:
	  [char]
	  operator== returned false
	  Obtained : ' '
	  Predicted: x

	  Surrounding substring(s):
	  Obtained : ...included when a string diff is performed
	  Predicted: ...included when a string diff isxperformed

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 291

	Comparison performed using:
	[sequoia::testing::value_tester<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	Checking for equivalence with:
	[char [3]]

	  Lengths differ
	  Obtained string is too long
	  [unsigned long long]
	  operator== returned false
	  Obtained : 3
	  Predicted: 2

	  First excess character: o
	  Full strings:
	  Obtained : foo
	  Predicted: fo

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 292

	Comparison performed using:
	[sequoia::testing::value_tester<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	Checking for equivalence with:
	[char [4]]

	  First difference detected at character 2:
	  [char]
	  operator== returned false
	  Obtained : o
	  Predicted: b

	  Full strings:
	  Obtained : foo
	  Predicted: fob
	  Advice: Sort your chars out!

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 254
	Empty and non-empty strings

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too short
	  [unsigned long long]
	  operator== returned false
	  Obtained : 0
	  Predicted: 13

	  First missing character: H
	  Full strings:
	  Obtained : 
	  Predicted: Hello, World!

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 255
	Empty and non-empty strings

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too long
	  [unsigned long long]
	  operator== returned false
	  Obtained : 13
	  Predicted: 0

	  First excess character: H
	  Full strings:
	  Obtained : Hello, World!
	  Predicted: 

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 256
	Strings of differing length

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 0:
	  [char]
	  operator== returned false
	  Obtained : w
	  Predicted: H

	  Full strings:
	  Obtained : what?!
	  Predicted: Hello, World!

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 257
	Differing strings of same length

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 7:
	  [char]
	  operator== returned false
	  Obtained : w
	  Predicted: W

	  Full strings:
	  Obtained : Hello, world?
	  Predicted: Hello, World!

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 258
	Advice

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false
	Advice: Foo, my old nemesis

	  First difference detected at character 0:
	  [char]
	  operator== returned false
	  Obtained : F
	  Predicted: B

	  Full strings:
	  Obtained : Foo
	  Predicted: Bar

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 264
	Empty string compared with long string

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too short
	  [unsigned long long]
	  operator== returned false
	  Obtained : 0
	  Predicted: 110

	  First missing character: T
	  Surrounding substring(s):
	  Obtained : 
	  Predicted: This is a message which is sufficiently long for only a segm...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 265
	Long string with empty string

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too long
	  [unsigned long long]
	  operator== returned false
	  Obtained : 110
	  Predicted: 0

	  First excess character: T
	  Surrounding substring(s):
	  Obtained : This is a message which is sufficiently long for only a segm...
	  Predicted: 

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 267
	Short string compared with long string

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too short
	  [unsigned long long]
	  operator== returned false
	  Obtained : 14
	  Predicted: 110

	  First missing character: a
	  Surrounding substring(s):
	  Obtained : This is a mess
	  Predicted: This is a message which is sufficiently long for only a segm...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 268
	Long string with short string

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too long
	  [unsigned long long]
	  operator== returned false
	  Obtained : 110
	  Predicted: 14

	  First excess character: a
	  Surrounding substring(s):
	  Obtained : This is a message which is sufficiently long for only a segm...
	  Predicted: This is a mess

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 270
	Strings differing by a newline

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: ,

	  Surrounding substring(s):
	  Obtained : ...\nWorld
	  Predicted: ..., World

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 271
	Strings differing by a newline

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : ,
	  Predicted: '\n'

	  Surrounding substring(s):
	  Obtained : ..., World
	  Predicted: ...\nWorld

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 272
	Strings differing by a newline at the start

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 0:
	  [char]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: H

	  Full strings:
	  Obtained : \nHello, World
	  Predicted: Hello, World

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 273
	Strings differing by a newline at the start

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 0:
	  [char]
	  operator== returned false
	  Obtained : H
	  Predicted: '\n'

	  Full strings:
	  Obtained : Hello, World
	  Predicted: \nHello, World

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 274
	Empty string compared with newline

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too short
	  [unsigned long long]
	  operator== returned false
	  Obtained : 0
	  Predicted: 1

	  First missing character: '\n'
	  Full strings:
	  Obtained : 
	  Predicted: \n

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 275
	Empty string compared with newline

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  Lengths differ
	  Obtained string is too long
	  [unsigned long long]
	  operator== returned false
	  Obtained : 1
	  Predicted: 0

	  First excess character: '\n'
	  Full strings:
	  Obtained : \n
	  Predicted: 

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 276
	Strings differing from newline onwards

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : ,
	  Predicted: '\n'

	  Surrounding substring(s):
	  Obtained : ..., World
	  Predicted: ...\n

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 277
	Strings differing from newline onwards

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: ,

	  Surrounding substring(s):
	  Obtained : ...\n
	  Predicted: ..., World

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 278
	Strings differing from newline onwards

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : ,
	  Predicted: '\n'

	  Surrounding substring(s):
	  Obtained : ..., World
	  Predicted: ...\nPeople

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 279
	Strings differing from newline onwards

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: ,

	  Surrounding substring(s):
	  Obtained : ...\nPeople
	  Predicted: ..., World

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 280
	Output suppressed by a new line

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 5:
	  [char]
	  operator== returned false
	  Obtained : ' '
	  Predicted: ,

	  Surrounding substring(s):
	  Obtained : Hello  World...
	  Predicted: Hello, World...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 281
	Difference on the second line

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected on line 2:
	  [char]
	  operator== returned false
	  Obtained : u
	  Predicted: o

	  Surrounding substring(s):
	  Obtained : ...\nAnd so furth
	  Predicted: ...\nAnd so forth

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 282
	Missing line

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected on line 2:
	  [char]
	  operator== returned false
	  Obtained : A
	  Predicted: '\n'

	  Surrounding substring(s):
	  Obtained : ...\nAnd so forth
	  Predicted: ...\n\n...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 283
	Extra line

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected on line 2:
	  [char]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: A

	  Surrounding substring(s):
	  Obtained : ...\n\n...
	  Predicted: ...\nAnd so forth

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 285
	Long strings compared with difference near middle

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 75:
	  [char]
	  operator== returned false
	  Obtained : x
	  Predicted: d

	  Surrounding substring(s):
	  Obtained : ...for only a segment to be incluxed when a string diff is perf...
	  Predicted: ...for only a segment to be included when a string diff is perf...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 286
	Long strings compared with difference near middle

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 75:
	  [char]
	  operator== returned false
	  Obtained : d
	  Predicted: x

	  Surrounding substring(s):
	  Obtained : ...for only a segment to be included when a string diff is perf...
	  Predicted: ...for only a segment to be incluxed when a string diff is perf...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 288
	Long strings compared with difference near end

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 100:
	  [char]
	  operator== returned false
	  Obtained : x
	  Predicted: ' '

	  Surrounding substring(s):
	  Obtained : ...included when a string diff isxperformed
	  Predicted: ...included when a string diff is performed

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 289
	Long strings compared with difference near end

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	  First difference detected at character 100:
	  [char]
	  operator== returned false
	  Obtained : ' '
	  Predicted: x

	  Surrounding substring(s):
	  Obtained : ...included when a string diff is performed
	  Predicted: ...included when a string diff isxperformed

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 291

	[std::basic_string_view<char, std::char_traits<char> >]

	  Element 2 of range incorrect
	  [char]
	  operator== returned false
	  Obtained : o
	  Predicted: '\0'

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 292

	[std::basic_string_view<char, std::char_traits<char> >]

	  Container size wrong
	  [unsigned long long]
	  operator== returned false
	  Obtained : 3
	  Predicted: 4

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 300
	Differing strings of same length

	[std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >]
	operator== returned false

	  First difference detected at character 7:
	  [wchar_t]
	  operator== returned false
	  Obtained : w
	  Predicted: W

	  Full strings:
	  Obtained : Hello, world?
	  Predicted: Hello, World!

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 301
	Advice

	[std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >]
	operator== returned false
	Advice: Foo, my old nemesis

	  First difference detected at character 0:
	  [wchar_t]
	  operator== returned false
	  Obtained : F
	  Predicted: B

	  Full strings:
	  Obtained : Foo
	  Predicted: Bar

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 302
	Missing line

	[std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >]
	operator== returned false

	  First difference detected on line 2:
	  [wchar_t]
	  operator== returned false
	  Obtained : A
	  Predicted: '\n'

	  Surrounding substring(s):
	  Obtained : ...\nAnd so forth
	  Predicted: ...\n\n...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 303
	Extra line

	[std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >]
	operator== returned false

	  First difference detected on line 2:
	  [wchar_t]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: A

	  Surrounding substring(s):
	  Obtained : ...\n\n...
	  Predicted: ...\nAnd so forth

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 300
	Differing strings of same length

	[std::basic_string_view<wchar_t, std::char_traits<wchar_t> >]
	operator== returned false

	  First difference detected at character 7:
	  [wchar_t]
	  operator== returned false
	  Obtained : w
	  Predicted: W

	  Full strings:
	  Obtained : Hello, world?
	  Predicted: Hello, World!

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 301
	Advice

	[std::basic_string_view<wchar_t, std::char_traits<wchar_t> >]
	operator== returned false
	Advice: Foo, my old nemesis

	  First difference detected at character 0:
	  [wchar_t]
	  operator== returned false
	  Obtained : F
	  Predicted: B

	  Full strings:
	  Obtained : Foo
	  Predicted: Bar

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 302
	Missing line

	[std::basic_string_view<wchar_t, std::char_traits<wchar_t> >]
	operator== returned false

	  First difference detected on line 2:
	  [wchar_t]
	  operator== returned false
	  Obtained : A
	  Predicted: '\n'

	  Surrounding substring(s):
	  Obtained : ...\nAnd so forth
	  Predicted: ...\n\n...

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 303
	Extra line

	[std::basic_string_view<wchar_t, std::char_traits<wchar_t> >]
	operator== returned false

	  First difference detected on line 2:
	  [wchar_t]
	  operator== returned false
	  Obtained : '\n'
	  Predicted: A

	  Surrounding substring(s):
	  Obtained : ...\n\n...
	  Predicted: ...\nAnd so forth

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 317

	[std::tuple<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, std::set<double, std::less<double>, std::allocator<double> >, std::complex<double> >]
	operator== returned false

	  Element 0 of tuple incorrect
	  [std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >]
	  operator== returned false

	    Element 0 of range incorrect
	    [std::pair<int, float>]
	    operator== returned false

	      First element of pair is incorrect
	      [int]
	      operator== returned false
	      Obtained : 1
	      Predicted: 2
	      Advice: Nested int advice

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 322

	[std::tuple<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, std::set<double, std::less<double>, std::allocator<double> >, std::complex<double> >]
	operator== returned false

	  Element 1 of tuple incorrect
	  [std::set<double, std::less<double>, std::allocator<double> >]
	  operator== returned false
	  Advice: Note reordering of elements upon set construction

	    Element 2 of range incorrect
	    [double]
	    operator== returned false
	    Obtained : 3.3
	    Predicted: 3.4

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 327

	[std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >]

	  Element 1 of range incorrect
	  Comparison performed using:
	  [sequoia::testing::value_tester<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	  Checking for equivalence with:
	  [std::basic_string_view<char, std::char_traits<char> >]

	    First difference detected at character 0:
	    [char]
	    operator== returned false
	    Obtained : b
	    Predicted: c

	    Full strings:
	    Obtained : b
	    Predicted: c

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 329

	[std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >]

	  Element 1 of range incorrect
	  Comparison performed using:
	  [sequoia::testing::value_tester<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	  Checking for equivalence with:
	  [std::basic_string_view<char, std::char_traits<char> >]

	    First difference detected at character 0:
	    [char]
	    operator== returned false
	    Obtained : b
	    Predicted: c

	    Full strings:
	    Obtained : b
	    Predicted: c
	    Advice: Ah, chars. So easy to get wrong.

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 337
	Inequivalence of two different paths, neither of which exists

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for equivalence with:
	[std::filesystem::path]

	  Final path token
	  [std::filesystem::path]
	  operator== returned false
	  Obtained : Blah
	  Predicted: Blurg

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 342
	Inequivalence of two different paths, one of which exists

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for equivalence with:
	[std::filesystem::path]

	  Path type
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/Blah
	  vs
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/A

	  [std::filesystem::file_type]
	  operator== returned false
	  Obtained : not found
	  Predicted: directory

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 347
	Inequivalence of directory/file

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for equivalence with:
	[std::filesystem::path]

	  Path type
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/A
	  vs
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/A/foo.txt

	  [std::filesystem::file_type]
	  operator== returned false
	  Obtained : directory
	  Predicted: regular

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 352
	Inequivalence of differently named files

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for equivalence with:
	[std::filesystem::path]

	  Path type
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/B/foo.txt
	  vs
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/B/bar.txt

	  [std::filesystem::file_type]
	  operator== returned false
	  Obtained : regular
	  Predicted: not found

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 357
	Inequivalence of file contents

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for equivalence with:
	[std::filesystem::path]

	  Contents of
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/A/foo.txt
	  vs
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/B/foo.txt

	  [std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	  operator== returned false

	    First difference detected at character 5:
	    [char]
	    operator== returned false
	    Obtained : ,
	    Predicted: '\n'

	    Surrounding substring(s):
	    Obtained : ..., world...
	    Predicted: ...\n

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 362
	Inequivalence of differently named directories with the same contents

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for equivalence with:
	[std::filesystem::path]

	  Final path token
	  [std::filesystem::path]
	  operator== returned false
	  Obtained : A
	  Predicted: C

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 367
	Inequivalence of directories with the same files but different contents

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for equivalence with:
	[std::filesystem::path]

	  Contents of
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/A/foo.txt
	  vs
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/MoreStuff/A/foo.txt

	  [std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	  operator== returned false

	    First difference detected at character 5:
	    [char]
	    operator== returned false
	    Obtained : ,
	    Predicted: '\n'

	    Surrounding substring(s):
	    Obtained : ..., world...
	    Predicted: ...\n

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 372
	Inequivalence of directories with some common files

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for equivalence with:
	[std::filesystem::path]

	  Number of directory entries for output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/B
	  [unsigned long long]
	  operator== returned false
	  Obtained : 1
	  Predicted: 2

	  First directory entry mismatch
	  [std::filesystem::path]
	  operator== returned false
	  Obtained : output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/B/foo.txt
	  Predicted: output/TestsTemporaryData/TestFramework/CoreDiagnostics/MoreStuff/B/bar.txt

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 377
	Inequivalence of directories with some common files

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for equivalence with:
	[std::filesystem::path]

	  Number of directory entries for output/TestsTemporaryData/TestFramework/CoreDiagnostics/MoreStuff/B
	  [unsigned long long]
	  operator== returned false
	  Obtained : 2
	  Predicted: 1

	  First directory entry mismatch
	  [std::filesystem::path]
	  operator== returned false
	  Obtained : output/TestsTemporaryData/TestFramework/CoreDiagnostics/MoreStuff/B/bar.txt
	  Predicted: output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/B/foo.txt

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 382
	File inequivalence when default file checking is used

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for equivalence with:
	[std::filesystem::path]

	  Contents of
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/CustomComparison/A/DifferingContent.ignore
	  vs
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/CustomComparison/B/DifferingContent.ignore

	  [std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	  operator== returned false

	    First difference detected at character 39:
	    [char]
	    operator== returned false
	    Obtained : B
	    Predicted: A

	    Surrounding substring(s):
	    Obtained : ...iffers from that in directory B
	    Predicted: ...iffers from that in directory A

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 387
	Range inequivalence when default file checking us used

	[std::vector<std::filesystem::path, std::allocator<std::filesystem::path> >]

	  Element 0 of range incorrect
	  Comparison performed using:
	  [sequoia::testing::value_tester<std::filesystem::path>]
	  Checking for equivalence with:
	  [std::filesystem::path]

	    Contents of
	    output/TestsTemporaryData/TestFramework/CoreDiagnostics/CustomComparison/A/DifferingContent.ignore
	    vs
	    output/TestsTemporaryData/TestFramework/CoreDiagnostics/CustomComparison/B/DifferingContent.ignore

	    [std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	    operator== returned false

	      First difference detected at character 39:
	      [char]
	      operator== returned false
	      Obtained : B
	      Predicted: A

	      Surrounding substring(s):
	      Obtained : ...iffers from that in directory B
	      Predicted: ...iffers from that in directory A

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 396
	Obtained bound but prediction not

	Comparison performed using:
	[sequoia::testing::value_tester<std::function<void __cdecl(void)> >]
	Checking for weak equivalence with:
	[std::function<void __cdecl(void)>]

	  obtained has a function bound but prediction has a function not bound
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 401
	Prediction bound but obtained not

	Comparison performed using:
	[sequoia::testing::value_tester<std::function<void __cdecl(void)> >]
	Checking for weak equivalence with:
	[std::function<void __cdecl(void)>]

	  obtained has a function not bound but prediction has a function bound
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 410
	string and string_view

	Comparison performed using:
	[sequoia::testing::value_tester<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	Checking for equivalence with:
	[std::basic_string_view<char, std::char_traits<char> >]

	  First difference detected at character 2:
	  [char]
	  operator== returned false
	  Obtained : o
	  Predicted: b

	  Full strings:
	  Obtained : foo
	  Predicted: fob

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 412
	Advice for equivalence checking

	Comparison performed using:
	[sequoia::testing::value_tester<sequoia::testing::(anonymous namespace)::foo>]
	Checking for equivalence with:
	[int]

	  Wrapped value
	  [int]
	  operator== returned false
	  Obtained : 42
	  Predicted: 41
	  Advice: Integer advice

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 414
	Advice for range equivalence, where the containerized form is explicitly specialized

	Comparison performed using:
	[sequoia::testing::value_tester<std::vector<sequoia::testing::(anonymous namespace)::foo, std::allocator<sequoia::testing::(anonymous namespace)::foo> > >]
	Checking for equivalence with:
	[std::vector<int, std::allocator<int> >]

	  Vector equivalence

	    Element 0 of range incorrect
	    Comparison performed using:
	    [sequoia::testing::value_tester<sequoia::testing::(anonymous namespace)::foo>]
	    Checking for equivalence with:
	    [int]

	      Wrapped value
	      [int]
	      operator== returned false
	      Obtained : 42
	      Predicted: 41
	      Advice: Integer advice

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 417
	Advice for range equivalence, where the containerized form is not explicitly specialized

	[std::set<sequoia::testing::(anonymous namespace)::foo, std::less<sequoia::testing::(anonymous namespace)::foo>, std::allocator<sequoia::testing::(anonymous namespace)::foo> >]

	  Element 0 of range incorrect
	  Comparison performed using:
	  [sequoia::testing::value_tester<sequoia::testing::(anonymous namespace)::foo>]
	  Checking for equivalence with:
	  [int]

	    Wrapped value
	    [int]
	    operator== returned false
	    Obtained : 42
	    Predicted: 41
	    Advice: Integer advice

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 424

	Comparison performed using:
	[sequoia::testing::value_tester<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	Checking for weak equivalence with:
	[std::initializer_list<int>]

	  Element 1 of range incorrect
	  [int]
	  operator== returned false
	  Obtained : 2
	  Predicted: 1

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 425

	Comparison performed using:
	[sequoia::testing::value_tester<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	Checking for weak equivalence with:
	[std::initializer_list<int>]

	  Element 1 of range incorrect
	  [int]
	  operator== returned false
	  Obtained : 2
	  Predicted: 1
	  Advice: Don't mess with the beast.

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 430

	[std::vector<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >, std::allocator<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > > >]

	  Element 1 of range incorrect
	  Comparison performed using:
	  [sequoia::testing::value_tester<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	  Checking for weak equivalence with:
	  [std::initializer_list<int>]

	    Element 1 of range incorrect
	    [int]
	    operator== returned false
	    Obtained : 4
	    Predicted: 5

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 431

	[std::vector<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >, std::allocator<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > > >]

	  Element 1 of range incorrect
	  Comparison performed using:
	  [sequoia::testing::value_tester<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	  Checking for weak equivalence with:
	  [std::initializer_list<int>]

	    Element 1 of range incorrect
	    [int]
	    operator== returned false
	    Obtained : 4
	    Predicted: 5
	    Advice: Or at least don't mess with a vector of beasts.

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 436
	Weak inequivalence of directories with some common files

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for weak equivalence with:
	[std::filesystem::path]

	  Number of directory entries for output/TestsTemporaryData/TestFramework/CoreDiagnostics/MoreStuff/B
	  [unsigned long long]
	  operator== returned false
	  Obtained : 2
	  Predicted: 1

	  First directory entry mismatch
	  [std::filesystem::path]
	  operator== returned false
	  Obtained : output/TestsTemporaryData/TestFramework/CoreDiagnostics/MoreStuff/B/bar.txt
	  Predicted: output/TestsTemporaryData/TestFramework/CoreDiagnostics/Stuff/B/foo.txt

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 440
	Directory weak inequivalence when default file checking is used

	Comparison performed using:
	[sequoia::testing::value_tester<std::filesystem::path>]
	Checking for weak equivalence with:
	[std::filesystem::path]

	  Contents of
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/CustomComparison/A/DifferingContent.ignore
	  vs
	  output/TestsTemporaryData/TestFramework/CoreDiagnostics/CustomComparison/B/DifferingContent.ignore

	  [std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	  operator== returned false

	    First difference detected at character 39:
	    [char]
	    operator== returned false
	    Obtained : B
	    Predicted: A

	    Surrounding substring(s):
	    Obtained : ...iffers from that in directory B
	    Predicted: ...iffers from that in directory A

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 445
	Weak inequivalence of range when default file checking is used

	[std::vector<std::filesystem::path, std::allocator<std::filesystem::path> >]

	  Element 0 of range incorrect
	  Comparison performed using:
	  [sequoia::testing::value_tester<std::filesystem::path>]
	  Checking for weak equivalence with:
	  [std::filesystem::path]

	    Contents of
	    output/TestsTemporaryData/TestFramework/CoreDiagnostics/CustomComparison/A/DifferingContent.ignore
	    vs
	    output/TestsTemporaryData/TestFramework/CoreDiagnostics/CustomComparison/B/DifferingContent.ignore

	    [std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	    operator== returned false

	      First difference detected at character 39:
	      [char]
	      operator== returned false
	      Obtained : B
	      Predicted: A

	      Surrounding substring(s):
	      Obtained : ...iffers from that in directory B
	      Predicted: ...iffers from that in directory A

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 449
	Advice for weak equivalence checking

	Comparison performed using:
	[sequoia::testing::value_tester<sequoia::testing::(anonymous namespace)::only_weakly_checkable>]
	Checking for weak equivalence with:
	[std::pair<int, double>]

	  Wrapped int
	  [int]
	  operator== returned false
	  Obtained : 42
	  Predicted: 41
	  Advice: Integer advice

	  Wrapped double
	  [double]
	  operator== returned false
	  Obtained : 3.14
	  Predicted: 3.13
	  Advice: Double advice

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 453
	Advice for range weak equivalence, where the containerized form is explicitly specialized

	[std::vector<sequoia::testing::(anonymous namespace)::only_weakly_checkable, std::allocator<sequoia::testing::(anonymous namespace)::only_weakly_checkable> >]

	  Element 0 of range incorrect
	  Comparison performed using:
	  [sequoia::testing::value_tester<sequoia::testing::(anonymous namespace)::only_weakly_checkable>]
	  Checking for weak equivalence with:
	  [std::pair<int, double>]

	    Wrapped int
	    [int]
	    operator== returned false
	    Obtained : 42
	    Predicted: 41
	    Advice: Integer advice

	    Wrapped double
	    [double]
	    operator== returned false
	    Obtained : 3.14
	    Predicted: 3.13
	    Advice: Double advice

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 457
	Advice for range weak equivalence, where the containerized form is not explicitly specialized

	[std::list<sequoia::testing::(anonymous namespace)::only_weakly_checkable, std::allocator<sequoia::testing::(anonymous namespace)::only_weakly_checkable> >]

	  Element 0 of range incorrect
	  Comparison performed using:
	  [sequoia::testing::value_tester<sequoia::testing::(anonymous namespace)::only_weakly_checkable>]
	  Checking for weak equivalence with:
	  [std::pair<int, double>]

	    Wrapped int
	    [int]
	    operator== returned false
	    Obtained : 42
	    Predicted: 41
	    Advice: Integer advice

	    Wrapped double
	    [double]
	    operator== returned false
	    Obtained : 3.14
	    Predicted: 3.13
	    Advice: Double advice

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 467

	[std::pair<int, double>]
	operator== returned false

	  First element of pair is incorrect
	  [int]
	  operator== returned false
	  Obtained : 0
	  Predicted: 1

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 473

	[std::pair<int, sequoia::testing::(anonymous namespace)::only_weakly_checkable>]
	  First element of pair is incorrect
	  [int]
	  operator== returned false
	  Obtained : 1
	  Predicted: 0

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 474

	[std::pair<int, sequoia::testing::(anonymous namespace)::only_weakly_checkable>]
	  Second element of pair is incorrect
	  [sequoia::testing::(anonymous namespace)::only_weakly_checkable]
	    Wrapped double
	    [double]
	    operator== returned false
	    Obtained : 2
	    Predicted: 2.1

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 475

	[std::pair<int, sequoia::testing::(anonymous namespace)::only_weakly_checkable>]
	  First element of pair is incorrect
	  [int]
	  operator== returned false
	  Obtained : 1
	  Predicted: 0

	  Second element of pair is incorrect
	  [sequoia::testing::(anonymous namespace)::only_weakly_checkable]
	    Wrapped double
	    [double]
	    operator== returned false
	    Obtained : 2
	    Predicted: 2.1

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 476

	[std::pair<int, sequoia::testing::(anonymous namespace)::only_weakly_checkable>]
	  Second element of pair is incorrect
	  [sequoia::testing::(anonymous namespace)::only_weakly_checkable]
	    Wrapped double
	    [double]
	    operator== returned false
	    Obtained : 2
	    Predicted: 2.1
	    Advice: Double advice

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 482

	[std::pair<int, sequoia::testing::(anonymous namespace)::only_equivalence_checkable>]
	  First element of pair is incorrect
	  [int]
	  operator== returned false
	  Obtained : 1
	  Predicted: 0

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 483

	[std::pair<int, sequoia::testing::(anonymous namespace)::only_equivalence_checkable>]
	  Second element of pair is incorrect
	  [sequoia::testing::(anonymous namespace)::only_equivalence_checkable]
	    Wrapped float
	    [double]
	    operator== returned false
	    Obtained : 1.5
	    Predicted: 1.4

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 484

	[std::pair<int, sequoia::testing::(anonymous namespace)::only_equivalence_checkable>]
	  First element of pair is incorrect
	  [int]
	  operator== returned false
	  Obtained : 0
	  Predicted: 1

	  Second element of pair is incorrect
	  [sequoia::testing::(anonymous namespace)::only_equivalence_checkable]
	    Wrapped float
	    [double]
	    operator== returned false
	    Obtained : 1.5
	    Predicted: 1.4

	=======================================

	Tests/TestFramework/CoreDiagnostics.cpp, Line 485

	[std::pair<int, sequoia::testing::(anonymous namespace)::only_equivalence_checkable>]
	  First element of pair is incorrect
	  [int]
	  operator== returned false
	  Obtained : 1
	  Predicted: 0
	  Advice: Integer advice

	=======================================

