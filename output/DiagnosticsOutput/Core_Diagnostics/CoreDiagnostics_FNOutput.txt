	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 353

	[bool]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 355

	[int]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 356

	[double]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 361

	Expected Exception Type:
	[std::runtime_error]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 363

	Expected Exception Type:
	[int]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 368

	[std::pair<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 370

	[std::tuple<int, double, float>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 377

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 378

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 379

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 380

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 386

	[std::optional<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 387

	[std::optional<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 388

	[std::optional<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 393
	Empty vector check which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 394
	One element vector check which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 395
	Multi-element vector comparison which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 399
	Iterators demarcate identical elements


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 405
	Differing strings

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 418

	[std::tuple<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, std::set<double, std::less<double>, std::allocator<double> >, std::complex<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 423

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 424

	--Regular Semantics--
	[sequoia::testing::perfectly_stringy_beast<char, std::allocator<char> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 429

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	With equivalent types:
	[char [4]]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 431

	[std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 435
	Equivalence of a file to itself

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 439
	Equivalence of a directory to itself

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 443
	Equivalence of a directory, with sub-directories to itself

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 447
	Equivalence of identical directories in different locations

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 451
	Weak equivalence of directories in with the same contents but different names

	Comparison performed using:
	[sequoia::testing::weak_equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 459

	Comparison performed using:
	[sequoia::testing::weak_equivalence_checker<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	With equivalent types:
	[std::initializer_list<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 462

	[std::vector<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >, std::allocator<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > > >]


	=======================================

