	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 140

	[bool]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 142

	[int]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 143

	[double]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 148
	Equivalence checking

	Comparison performed using:
	[sequoia::testing::value_tester<sequoia::testing::only_equivalence_checkable>]
	Checking for equivalence with:
	[int]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 149
	Advice for equivalence checking

	Comparison performed using:
	[sequoia::testing::value_tester<sequoia::testing::only_equivalence_checkable>]
	Checking for equivalence with:
	[int]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 155

	Comparison performed using:
	[sequoia::testing::value_tester<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	Checking for weak equivalence with:
	[std::initializer_list<int>]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 158

	[std::vector<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >, std::allocator<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > > >]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 160
	Advice for weak equivalence checking

	Comparison performed using:
	[sequoia::testing::value_tester<sequoia::testing::only_weakly_checkable>]
	Checking for weak equivalence with:
	[std::pair<int, double>]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 163
	Advice for range weak equivalence, where the containerized form is explicitly specialized

	[std::vector<sequoia::testing::only_weakly_checkable, std::allocator<sequoia::testing::only_weakly_checkable> >]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 168
	Advice for range weak equivalence, where the containerized form is not explicitly specialized

	[std::list<sequoia::testing::only_weakly_checkable, std::allocator<sequoia::testing::only_weakly_checkable> >]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 175
	Best available for int

	[int]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 178
	Best available for only_weakly_checkable

	[sequoia::testing::only_weakly_checkable]

	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 183
	Best available for only_weakly_checkable

	[sequoia::testing::only_weakly_checkable]

	=======================================

