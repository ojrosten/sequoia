	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 326

	[bool]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 328

	[int]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 329

	[double]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 334

	Expected Exception Type:
	[std::runtime_error]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 336

	Expected Exception Type:
	[int]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 341

	[std::pair<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 343

	[std::tuple<int, double, float>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 350

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 351

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 352

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 353

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 359

	[std::optional<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 360

	[std::optional<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 361

	[std::optional<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 366
	Empty vector check which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 367
	One element vector check which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 368
	Multi-element vector comparison which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 372
	Iterators demarcate identical elements


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 378
	Differing strings

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 391

	[std::tuple<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, std::set<double, std::less<double>, std::allocator<double> >, std::complex<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 396

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 397

	--Regular Semantics--
	[sequoia::testing::perfectly_stringy_beast<char, std::allocator<char> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 402

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	With equivalent types:
	[char [4]]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 404

	[std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 408
	Equivalence of a file to itself

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 412
	Equivalence of a directory to itself

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 416
	Equivalence of a directory, with sub-directories to itself

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 420
	Equivalence of identical directories in different locations

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 428

	Comparison performed using:
	[sequoia::testing::weak_equivalence_checker<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	With equivalent types:
	[std::initializer_list<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 431

	[std::vector<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >, std::allocator<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > > >]


	=======================================

