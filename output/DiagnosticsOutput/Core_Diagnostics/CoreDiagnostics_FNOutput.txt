	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 361

	[bool]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 363

	[int]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 364

	[double]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 369

	Expected Exception Type:
	[std::runtime_error]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 371

	Expected Exception Type:
	[int]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 376

	[std::pair<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 378

	[std::tuple<int, double, float>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 385

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 386

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 387

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 388

	[std::variant<int, double>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 394

	[std::optional<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 395

	[std::optional<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 396

	[std::optional<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 401
	Empty vector check which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 402
	One element vector check which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 403
	Multi-element vector comparison which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 407
	Iterators demarcate identical elements


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 413
	Differing strings

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 426

	[std::tuple<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, std::set<double, std::less<double>, std::allocator<double> >, std::complex<double> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 431

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 432

	--Regular Semantics--
	[sequoia::testing::perfectly_stringy_beast<char, std::allocator<char> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 437

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	With equivalent types:
	[char [4]]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 439

	[std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 443
	Equivalence of a file to itself

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 447
	Equivalence of a directory to itself

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 451
	Equivalence of a directory, with sub-directories to itself

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 455
	Equivalence of identical directories in different locations

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 459
	File equivalence when .ignore is ignored

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 463
	Weak equivalence of directories in with the same contents but different names

	Comparison performed using:
	[sequoia::testing::weak_equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 467
	Weak equivalence when .ignore is ignored

	Comparison performed using:
	[sequoia::testing::weak_equivalence_checker<std::filesystem::path>]
	With equivalent types:
	[std::filesystem::path]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 475

	Comparison performed using:
	[sequoia::testing::weak_equivalence_checker<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	With equivalent types:
	[std::initializer_list<int>]


	=======================================

	False Positive Failure:
	Tests/TestFramework/CoreDiagnostics.cpp, Line 478

	[std::vector<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >, std::allocator<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > > >]


	=======================================

