	False Positive Failure:
	Tests/TestFramework/ContainerFreeDiagnostics.cpp, Line 165
	Empty vector check which should pass

	[std::vector<double, std::allocator<double> >]

	=======================================

	False Positive Failure:
	Tests/TestFramework/ContainerFreeDiagnostics.cpp, Line 166
	One element vector check which should pass

	[std::vector<double, std::allocator<double> >]

	=======================================

	False Positive Failure:
	Tests/TestFramework/ContainerFreeDiagnostics.cpp, Line 167
	Multi-element vector comparison which should pass

	[std::vector<double, std::allocator<double> >]

	=======================================

	False Positive Failure:
	Tests/TestFramework/ContainerFreeDiagnostics.cpp, Line 171
	Iterators demarcate identical elements

	=======================================

	False Positive Failure:
	Tests/TestFramework/ContainerFreeDiagnostics.cpp, Line 174
	Advice for range equivalence, where the containerized form is explicitly specialized

	Comparison performed using:
	[sequoia::testing::value_tester<std::vector<sequoia::testing::(anonymous namespace)::foo, std::allocator<sequoia::testing::(anonymous namespace)::foo> > >]
	Checking for equivalence with:
	[std::vector<int, std::allocator<int> >]

	=======================================

	False Positive Failure:
	Tests/TestFramework/ContainerFreeDiagnostics.cpp, Line 180
	Advice for range equivalence, where the containerized form is not explicitly specialized

	[std::set<sequoia::testing::(anonymous namespace)::foo, std::less<sequoia::testing::(anonymous namespace)::foo>, std::allocator<sequoia::testing::(anonymous namespace)::foo> >]

	=======================================

	False Positive Failure:
	Tests/TestFramework/ContainerFreeDiagnostics.cpp, Line 188

	[std::pair<int, double>]

	=======================================

	False Positive Failure:
	Tests/TestFramework/ContainerFreeDiagnostics.cpp, Line 190

	[std::tuple<int, double, float>]

	=======================================

	False Positive Failure:
	Tests/TestFramework/ContainerFreeDiagnostics.cpp, Line 203

	[std::tuple<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, std::set<double, std::less<double>, std::allocator<double> >, std::complex<double> >]

	=======================================

	False Positive Failure:
	Tests/TestFramework/ContainerFreeDiagnostics.cpp, Line 205

	[std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >]

	=======================================

