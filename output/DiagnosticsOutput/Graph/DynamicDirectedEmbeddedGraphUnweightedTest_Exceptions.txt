Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 278
cbegin_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::cbegin_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 286
cend_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::cend_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 294
crbegin_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::crbegin_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 302
crend_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::crend_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 310
cedges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::cedges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 318
swapping nodes throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::swap_nodes: at least one node index [0, 0] out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 326
joining nodes throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::join: at least one node index [0, 0] out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 360
cbegin_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::cbegin_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 368
cend_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::cend_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 376
crbegin_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::crbegin_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 384
crend_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::crend_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 392
cedges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::cedges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 400
swapping nodes throws if first index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::swap_nodes: at least one node index [1, 0] out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 408
swapping nodes throws if second index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::swap_nodes: at least one node index [0, 1] out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 416
joining nodes throws if first index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::join: at least one node index [1, 0] out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 424
joining nodes throws if second index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::join: at least one node index [0, 1] out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 432
inserting join throws if second index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::insert_join: insertion position 2 out of range for node 0 - max index is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 278
cbegin_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::cbegin_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 286
cend_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::cend_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 294
crbegin_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::crbegin_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 302
crend_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::crend_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 310
cedges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::cedges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 318
swapping nodes throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::swap_nodes: at least one node index [0, 0] out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 326
joining nodes throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::join: at least one node index [0, 0] out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 360
cbegin_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::cbegin_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 368
cend_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::cend_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 376
crbegin_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::crbegin_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 384
crend_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::crend_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 392
cedges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::cedges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 400
swapping nodes throws if first index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::swap_nodes: at least one node index [1, 0] out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 408
swapping nodes throws if second index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::swap_nodes: at least one node index [0, 1] out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 416
joining nodes throws if first index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::join: at least one node index [1, 0] out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 424
joining nodes throws if second index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::join: at least one node index [0, 1] out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 432
inserting join throws if second index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::insert_join: insertion position 2 out of range for node 0 - max index is 1

=======================================

