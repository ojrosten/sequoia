Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 292
cbegin_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::cbegin_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 300
cend_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::cend_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 308
crbegin_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::crbegin_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 316
crend_edges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::crend_edges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 324
cedges throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::cedges: node index 0 out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 332
swapping nodes throws for empty graph

Expected Exception Type:
[std::out_of_range]
node_storage::swap - index out of range

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 340
joining nodes throws for empty graph

Expected Exception Type:
[std::out_of_range]
connectivity::join: at least one node index [0, 0] out of range - graph order is 0

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphWeightedTestingUtilities.hpp, Line 270
Attempt to set a node weight which does not exist

Expected Exception Type:
[std::out_of_range]
node_storage::node_weight - index out of range!

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphWeightedTestingUtilities.hpp, Line 280
Attempt to mutate a node weight which does not exist

Expected Exception Type:
[std::out_of_range]
node_storage::node_weight - index out of range!

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 374
cbegin_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::cbegin_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 382
cend_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::cend_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 390
crbegin_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::crbegin_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 398
crend_edges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::crend_edges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 406
cedges throws when index is out of range

Expected Exception Type:
[std::out_of_range]
connectivity::cedges: node index 1 out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 414
swapping nodes throws if first index out of range

Expected Exception Type:
[std::out_of_range]
node_storage::swap - index out of range

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 422
swapping nodes throws if second index out of range

Expected Exception Type:
[std::out_of_range]
node_storage::swap - index out of range

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 430
joining nodes throws if first index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::join: at least one node index [1, 0] out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 438
joining nodes throws if second index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::join: at least one node index [0, 1] out of range - graph order is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphTestingUtilities.hpp, Line 446
inserting join throws if second index out of range

Expected Exception Type:
[std::out_of_range]
connectivity::insert_join: insertion position 2 out of range for node 0 - max index is 1

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphWeightedTestingUtilities.hpp, Line 314
Attempt to set a node weight which does not exist

Expected Exception Type:
[std::out_of_range]
node_storage::node_weight - index out of range!

=======================================

Tests/Maths/Graph/DirectedEmbedded/DynamicDirectedEmbeddedGraphWeightedTestingUtilities.hpp, Line 324
Attempt to mutate a node weight which does not exist

Expected Exception Type:
[std::out_of_range]
node_storage::node_weight - index out of range!

=======================================

