	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 65

	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 66

	[bool]
	operator== returned false
	Obtained : false
	Predicted: true
	Advice: I pity the fool who confuses the bool.

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 69
	Advisor ignored

	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 73
	Integers which should compare different

	[int]
	operator== returned false
	Obtained : 5
	Predicted: 4

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 74

	[double]
	operator== returned false
	Obtained : 6.5
	Predicted: 5.6
	Advice: Double, double, toil and trouble

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 78

	[std::pair<int, double>]
	operator== returned false

	Second element of pair is incorrect
	[double]
	operator== returned false
	Obtained : 7.8
	Predicted: -7.8

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 79

	[std::pair<int, double>]
	operator== returned false

	First element of pair is incorrect
	[int]
	operator== returned false
	Obtained : 5
	Predicted: -5

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 80

	[std::pair<int, double>]
	operator== returned false

	First element of pair is incorrect
	[int]
	operator== returned false
	Obtained : 5
	Predicted: -5
	Advice: Integer advice

	Second element of pair is incorrect
	[double]
	operator== returned false
	Obtained : 7.8
	Predicted: 6.8
	Advice: Double advice

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 82

	[std::tuple<int, double, float>]
	operator== returned false

	Element 0 of tuple incorrect
	[int]
	operator== returned false
	Obtained : 4
	Predicted: 0

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 83

	[std::tuple<int, double, float>]
	operator== returned false

	Element 1 of tuple incorrect
	[double]
	operator== returned false
	Obtained : 3.4
	Predicted: 0
	Advice: Double advice

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 84

	[std::tuple<int, double, float>]
	operator== returned false

	Element 2 of tuple incorrect
	[float]
	operator== returned false
	Obtained : -9.2
	Predicted: -0

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 86
	Exception expected but nothing thrown

	Expected Exception Type:
	[std::runtime_error]
	No exception thrown

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 87
	Exception thrown but of wrong type

	Expected Exception Type:
	[std::runtime_error]
	Unexpected exception thrown (caught by std::exception&):
	"Error"

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 88
	Exception thrown but of unknown type

	Expected Exception Type:
	[std::runtime_error]
	Unknown exception thrown

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 93
	Empty vector check which should fail

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	Container size wrong
	[long]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 94
	One element vector check which should fail due to wrong value

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	Element 0 of range incorrect
	[double]
	operator== returned false
	Obtained : 1
	Predicted: 2
	Advice: Vector element advice

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 96
	One element vector check which should fail due to differing sizes

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	Container size wrong
	[long]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 97
	Multi-element vector comparison which should fail due to last element

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	Element 1 of range incorrect
	[double]
	operator== returned false
	Obtained : 5
	Predicted: 4

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 98
	Multi-element vector comparison which should fail due to first element

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	Element 0 of range incorrect
	[double]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 99
	Multi-element vector comparison which should fail due to middle element

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	Element 1 of range incorrect
	[double]
	operator== returned false
	Obtained : 3.2
	Predicted: 3.3

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 100
	Multi-element vector comparison which should fail due to different sizes

	[std::vector<double, std::allocator<double> >]
	operator== returned false

	Container size wrong
	[long]
	operator== returned false
	Obtained : 3
	Predicted: 2

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 104
	Iterators demarcate differing numbers of elements

	Container size wrong
	[long]
	operator== returned false
	Obtained : 4
	Predicted: 6

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 105
	Iterators demarcate differing elements

	Element 0 of range incorrect
	[float]
	operator== returned false
	Obtained : -4.3
	Predicted: 1.1

	Element 1 of range incorrect
	[float]
	operator== returned false
	Obtained : 2.8
	Predicted: -4.3

	Element 2 of range incorrect
	[float]
	operator== returned false
	Obtained : 6.2
	Predicted: 2.8

	Element 3 of range incorrect
	[float]
	operator== returned false
	Obtained : 7.3
	Predicted: 6.2

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 108
	Strings of differing length

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	Container size wrong
	[long]
	operator== returned false
	Obtained : 6
	Predicted: 13

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 109
	Differing strings of same length

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]
	operator== returned false

	Element 7 of range incorrect
	[char]
	operator== returned false
	Obtained : w
	Predicted: W

	Element 12 of range incorrect
	[char]
	operator== returned false
	Obtained : ?
	Predicted: !

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 123

	[std::tuple<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, std::set<double, std::less<double>, std::allocator<double> >, std::complex<double> >]
	operator== returned false

	Element 0 of tuple incorrect
	[std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >]
	operator== returned false

	Element 0 of range incorrect
	[std::pair<int, float>]
	operator== returned false

	First element of pair is incorrect
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2
	Advice: Nested int advice

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 128

	[std::tuple<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, std::set<double, std::less<double>, std::allocator<double> >, std::complex<double> >]
	operator== returned false

	Element 1 of tuple incorrect
	[std::set<double, std::less<double>, std::allocator<double> >]
	operator== returned false
	Advice: Note reordering of elements upon set construction

	Element 2 of range incorrect
	[double]
	operator== returned false
	Obtained : 3.3
	Predicted: 3.4

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 136
	Broken equality

	--Regular Semantics--
	[sequoia::testing::broken_equality<int, std::allocator<int> >]

	Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 137
	Broken inequality

	--Regular Semantics--
	[sequoia::testing::broken_inequality<int, std::allocator<int> >]

	Inequality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 138
	Broken copy

	--Regular Semantics--
	[sequoia::testing::broken_copy<int, std::allocator<int> >]

	Inconsistent copy constructor (x)
	[sequoia::testing::broken_copy<int, std::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 139
	Broken move

	--Regular Semantics--
	[sequoia::testing::broken_move<int, std::allocator<int> >]

	Inconsistent move construction
	[sequoia::testing::broken_move<int, std::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 140
	Broken copy assignment

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment<int, std::allocator<int> >]

	Inconsistent copy assignment (from y)
	[sequoia::testing::broken_copy_assignment<int, std::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 141
	Broken move assignment

	--Regular Semantics--
	[sequoia::testing::broken_move_assignment<int, std::allocator<int> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::broken_move_assignment<int, std::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 142
	Broken swap

	--Regular Semantics--
	[sequoia::testing::broken_swap<int, std::allocator<int> >]

	Inconsistent Swap (y)
	[sequoia::testing::broken_swap<int, std::allocator<int> >]
	operator== returned false
	Obtained : 2 
	Predicted: 1 

	Inconsistent Swap (x)
	[sequoia::testing::broken_swap<int, std::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 143
	Broken copy value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_value_semantics<int, std::shared_ptr<int>, std::allocator<std::shared_ptr<int> > >]

	Either mutation is not doing anything following copy construction or value semantics are broken, with mutation of an object also changing the object from which it was copied
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 144
	Broken copy assignment value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment_value_semantics<int, std::shared_ptr<int>, std::allocator<std::shared_ptr<int> > >]

	Either mutation is not doing anything following copy assignment or value semantics are broken, with mutation of an object also changing the object from which it was assigned
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 146
	Broken check invariant

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 151

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	With equivalent types:
	[char [3]]

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	Container size wrong
	[long]
	operator== returned false
	Obtained : 3
	Predicted: 2

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 152

	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	With equivalent types:
	[char [4]]

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	Element 2 of range incorrect
	[char]
	operator== returned false
	Obtained : o
	Predicted: b
	Advice: Sort your chars out!

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 156

	[std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >]

	Element 1 of range incorrect
	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	With equivalent types:
	[std::basic_string_view<char, std::char_traits<char> >]

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	Element 0 of range incorrect
	[char]
	operator== returned false
	Obtained : b
	Predicted: c

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 158

	[std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >]

	Element 1 of range incorrect
	Comparison performed using:
	[sequoia::testing::equivalence_checker<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]
	With equivalent types:
	[std::basic_string_view<char, std::char_traits<char> >]

	[std::basic_string_view<char, std::char_traits<char> >]
	operator== returned false

	Element 0 of range incorrect
	[char]
	operator== returned false
	Obtained : b
	Predicted: c
	Advice: Ah, chars. So easy to get wrong.

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 166

	Comparison performed using:
	[sequoia::testing::weak_equivalence_checker<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	With equivalent types:
	[std::initializer_list<int>]

	Element 1 of range incorrect
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 167

	Comparison performed using:
	[sequoia::testing::weak_equivalence_checker<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	With equivalent types:
	[std::initializer_list<int>]

	Element 1 of range incorrect
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1
	Advice: Don't mess with the beast.

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 172

	[std::vector<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >, std::allocator<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > > >]

	Element 1 of range incorrect
	Comparison performed using:
	[sequoia::testing::weak_equivalence_checker<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	With equivalent types:
	[std::initializer_list<int>]

	Element 1 of range incorrect
	[int]
	operator== returned false
	Obtained : 4
	Predicted: 5

	=======================================

	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 173

	[std::vector<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >, std::allocator<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > > >]

	Element 1 of range incorrect
	Comparison performed using:
	[sequoia::testing::weak_equivalence_checker<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > >]
	With equivalent types:
	[std::initializer_list<int>]

	Element 1 of range incorrect
	[int]
	operator== returned false
	Obtained : 4
	Predicted: 5
	Advice: Or at least don't mess with a vector of beasts.

	=======================================

	../Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 26
	Broken equality

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_equality<int, std::allocator<int> >]

	Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 27
	Broken inequality

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_inequality<int, std::allocator<int> >]

	Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 28
	Broken move

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move<int, std::allocator<int> >]

	Inconsistent move construction
	[sequoia::testing::move_only_broken_move<int, std::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 

	=======================================

	../Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 29
	Broken swap

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_swap<int, std::allocator<int> >]

	Inconsistent Swap (y)
	[sequoia::testing::move_only_broken_swap<int, std::allocator<int> >]
	operator== returned false
	Obtained : 2 
	Predicted: 1 

	Inconsistent Swap (x)
	[sequoia::testing::move_only_broken_swap<int, std::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 30
	Broken move assignment

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move_assignment<int, std::allocator<int> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::move_only_broken_move_assignment<int, std::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 31
	Broken check invariant

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, std::allocator<int> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 32
	Broken check invariant

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, std::allocator<int> >]

	Precondition - for checking move-only semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 33
	Broken check invariant

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, std::allocator<int> >]

	Precondition - for checking move-only semantics, y and yClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/PerformanceTestDiagnostics.cpp, Line 30
	Performance Test for which fast task is too slow, [1, (2.0, 2.0)

	Fast Task duration: 0.00137871s +- 4 * 4.02877e-05
	Slow Task duration: 0.00139161s +- 4 * 4.91619e-05 [1.00936; (2, 2)]

	=======================================

	../Tests/TestFramework/PerformanceTestDiagnostics.cpp, Line 34
	Performance Test for which fast task is too slow [1, (2.0, 3.0)

	Fast Task duration: 0.00132306s +- 4 * 4.07221e-05
	Slow Task duration: 0.00134199s +- 4 * 4.52859e-05 [1.01431; (2, 3)]

	=======================================

	../Tests/TestFramework/PerformanceTestDiagnostics.cpp, Line 38
	Performance Test for which fast task is too fast [4, (2.0, 2.5)]

	Fast Task duration: 0.00139262s +- 4 * 1.17422e-05
	Slow Task duration: 0.00497517s +- 4 * 0.000403498 [3.57253; (2, 2.5)]

	=======================================

	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 29

	[double]
	Obtained : 3
	Predicted: 5 +/- 1

	=======================================

	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 30

	[double]
	Obtained : 7
	Predicted: 5 +/- 1
	Advice: Tweak your tolerance!

	=======================================

	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 35

	[double]
	Fuzzy comparison failed
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 43

	Element 0 of range incorrect
	[double]
	Obtained : 0.5
	Predicted: -0.1 +/- 0.5

	=======================================

	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 44

	Element 0 of range incorrect
	[double]
	Obtained : 0.5
	Predicted: -0.1 +/- 0.5
	Advice: Consider increasing tolerance!

	=======================================

	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 50

	Element 1 of range incorrect
	[double]
	Obtained : 0.6
	Predicted: 1.2 +/- 0.5

	=======================================

	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 55

	Element 1 of range incorrect
	[double]
	Obtained : -1
	Predicted: -1.8 +/- 0.5

	=======================================

	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 58

	Element 1 of range incorrect

	Element 0 of range incorrect
	[double]
	Obtained : 5.1
	Predicted: 3.7 +/- 0.5

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 52
	Broken equality

	--Regular Semantics--
	[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 63
	Broken inequality

	--Regular Semantics--
	[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Inequality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 74
	Inefficient equality

	--Regular Semantics--
	[sequoia::testing::inefficient_equality<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Unexpected allocation detected for operator==
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 85
	Inefficient inequality

	--Regular Semantics--
	[sequoia::testing::inefficient_inequality<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Unexpected allocation detected for operator!=
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 97
	Broken copy

	--Regular Semantics--
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Inconsistent copy constructor (x)
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 108
	Broken para-copy

	--Regular Semantics--
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Inconsistent para-copy construction
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 119
	Broken move

	--Regular Semantics--
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Inconsistent move construction
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 130
	Broken para-move

	--Regular Semantics--
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Inconsistent para-move construction
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 141
	Broken copy assignment

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Inconsistent copy assignment (from y)
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 152
	Broken move assignment

	--Regular Semantics--
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 170
	Broken copy value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, false> >]

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Either mutation is not doing anything following copy construction or value semantics are broken, with mutation of an object also changing the object from which it was copied
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 189
	Broken copy assignment value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, false> >]

	Either mutation is not doing anything following copy assignment or value semantics are broken, with mutation of an object also changing the object from which it was assigned
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 208
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 209
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 220
	Inefficient move

	--Regular Semantics--
	[sequoia::testing::inefficient_move<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 238
	Inefficient para-copy

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 256
	Inefficient para-move

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 267
	Broken check invariant

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 278
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 280
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 282
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 297
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 315
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 317
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 319
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 334
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 52
	Broken equality

	--Regular Semantics--
	[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 63
	Broken inequality

	--Regular Semantics--
	[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Inequality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 74
	Inefficient equality

	--Regular Semantics--
	[sequoia::testing::inefficient_equality<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Unexpected allocation detected for operator==
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 85
	Inefficient inequality

	--Regular Semantics--
	[sequoia::testing::inefficient_inequality<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Unexpected allocation detected for operator!=
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 97
	Broken copy

	--Regular Semantics--
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Inconsistent copy constructor (x)
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 108
	Broken para-copy

	--Regular Semantics--
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Inconsistent para-copy construction
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 119
	Broken move

	--Regular Semantics--
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Inconsistent move construction
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 130
	Broken para-move

	--Regular Semantics--
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Inconsistent para-move construction
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 141
	Broken copy assignment

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Inconsistent copy assignment (from y)
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 152
	Broken move assignment

	--Regular Semantics--
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 170
	Broken copy value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, true> >]

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Either mutation is not doing anything following copy construction or value semantics are broken, with mutation of an object also changing the object from which it was copied
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 189
	Broken copy assignment value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, true> >]

	Either mutation is not doing anything following copy assignment or value semantics are broken, with mutation of an object also changing the object from which it was assigned
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 208
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 209
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 220
	Inefficient move

	--Regular Semantics--
	[sequoia::testing::inefficient_move<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 238
	Inefficient para-copy

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 256
	Inefficient para-move

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 267
	Broken check invariant

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 278
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 280
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 282
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 297
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 315
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 317
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 319
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 334
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 52
	Broken equality

	--Regular Semantics--
	[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 63
	Broken inequality

	--Regular Semantics--
	[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Inequality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 74
	Inefficient equality

	--Regular Semantics--
	[sequoia::testing::inefficient_equality<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Unexpected allocation detected for operator==
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 85
	Inefficient inequality

	--Regular Semantics--
	[sequoia::testing::inefficient_inequality<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Unexpected allocation detected for operator!=
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 97
	Broken copy

	--Regular Semantics--
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Inconsistent copy constructor (x)
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 108
	Broken para-copy

	--Regular Semantics--
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Inconsistent para-copy construction
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 119
	Broken move

	--Regular Semantics--
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Inconsistent move construction
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 130
	Broken para-move

	--Regular Semantics--
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Inconsistent para-move construction
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 141
	Broken copy assignment

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Inconsistent copy assignment (from y)
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 152
	Broken move assignment

	--Regular Semantics--
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 170
	Broken copy value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, false> >]

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Either mutation is not doing anything following copy construction or value semantics are broken, with mutation of an object also changing the object from which it was copied
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 189
	Broken copy assignment value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, false> >]

	Either mutation is not doing anything following copy assignment or value semantics are broken, with mutation of an object also changing the object from which it was assigned
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 208
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 209
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 220
	Inefficient move

	--Regular Semantics--
	[sequoia::testing::inefficient_move<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 238
	Inefficient para-copy

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 256
	Inefficient para-move

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 267
	Broken check invariant

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 278
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 280
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 282
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 297
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 315
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 317
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 319
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 334
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 52
	Broken equality

	--Regular Semantics--
	[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 63
	Broken inequality

	--Regular Semantics--
	[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Inequality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 74
	Inefficient equality

	--Regular Semantics--
	[sequoia::testing::inefficient_equality<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Unexpected allocation detected for operator==
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 85
	Inefficient inequality

	--Regular Semantics--
	[sequoia::testing::inefficient_inequality<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Unexpected allocation detected for operator!=
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 97
	Broken copy

	--Regular Semantics--
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Inconsistent copy constructor (x)
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 108
	Broken para-copy

	--Regular Semantics--
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Inconsistent para-copy construction
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 119
	Broken move

	--Regular Semantics--
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Inconsistent move construction
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 130
	Broken para-move

	--Regular Semantics--
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Inconsistent para-move construction
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 141
	Broken copy assignment

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Inconsistent copy assignment (from y)
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 152
	Broken move assignment

	--Regular Semantics--
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 170
	Broken copy value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, true> >]

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Either mutation is not doing anything following copy construction or value semantics are broken, with mutation of an object also changing the object from which it was copied
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 189
	Broken copy assignment value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, true> >]

	Either mutation is not doing anything following copy assignment or value semantics are broken, with mutation of an object also changing the object from which it was assigned
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 208
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 209
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 220
	Inefficient move

	--Regular Semantics--
	[sequoia::testing::inefficient_move<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 238
	Inefficient para-copy

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 256
	Inefficient para-move

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 267
	Broken check invariant

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 278
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 280
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 282
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 297
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 315
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 317
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 319
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 334
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 52
	Broken equality

	--Regular Semantics--
	[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 63
	Broken inequality

	--Regular Semantics--
	[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Inequality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 74
	Inefficient equality

	--Regular Semantics--
	[sequoia::testing::inefficient_equality<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for operator==
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 85
	Inefficient inequality

	--Regular Semantics--
	[sequoia::testing::inefficient_inequality<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for operator!=
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 97
	Broken copy

	--Regular Semantics--
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Inconsistent copy constructor (x)
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 108
	Broken para-copy

	--Regular Semantics--
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Inconsistent para-copy construction
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 119
	Broken move

	--Regular Semantics--
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Inconsistent move construction
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 130
	Broken para-move

	--Regular Semantics--
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Inconsistent para-move construction
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 141
	Broken copy assignment

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Inconsistent copy assignment (from y)
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 152
	Broken move assignment

	--Regular Semantics--
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 170
	Broken copy value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, false> >]

	Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Either mutation is not doing anything following copy construction or value semantics are broken, with mutation of an object also changing the object from which it was copied
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 189
	Broken copy assignment value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, false> >]

	Either mutation is not doing anything following copy assignment or value semantics are broken, with mutation of an object also changing the object from which it was assigned
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 208
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 209
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 220
	Inefficient move

	--Regular Semantics--
	[sequoia::testing::inefficient_move<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 238
	Inefficient para-copy

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 256
	Inefficient para-move

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 267
	Broken check invariant

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 278
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 280
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 282
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 297
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 315
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 317
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 319
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 334
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 52
	Broken equality

	--Regular Semantics--
	[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 63
	Broken inequality

	--Regular Semantics--
	[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Inequality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 74
	Inefficient equality

	--Regular Semantics--
	[sequoia::testing::inefficient_equality<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for operator==
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 85
	Inefficient inequality

	--Regular Semantics--
	[sequoia::testing::inefficient_inequality<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for operator!=
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 97
	Broken copy

	--Regular Semantics--
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Inconsistent copy constructor (x)
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 108
	Broken para-copy

	--Regular Semantics--
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Inconsistent para-copy construction
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 119
	Broken move

	--Regular Semantics--
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Inconsistent move construction
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 130
	Broken para-move

	--Regular Semantics--
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Inconsistent para-move construction
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 141
	Broken copy assignment

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Inconsistent copy assignment (from y)
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 152
	Broken move assignment

	--Regular Semantics--
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 170
	Broken copy value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, true> >]

	Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Either mutation is not doing anything following copy construction or value semantics are broken, with mutation of an object also changing the object from which it was copied
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 189
	Broken copy assignment value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, true> >]

	Either mutation is not doing anything following copy assignment or value semantics are broken, with mutation of an object also changing the object from which it was assigned
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 208
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 209
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 220
	Inefficient move

	--Regular Semantics--
	[sequoia::testing::inefficient_move<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 238
	Inefficient para-copy

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 256
	Inefficient para-move

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 267
	Broken check invariant

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 278
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 280
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 282
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 297
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 315
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 317
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 319
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 334
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 52
	Broken equality

	--Regular Semantics--
	[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 63
	Broken inequality

	--Regular Semantics--
	[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Inequality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 74
	Inefficient equality

	--Regular Semantics--
	[sequoia::testing::inefficient_equality<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for operator==
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 85
	Inefficient inequality

	--Regular Semantics--
	[sequoia::testing::inefficient_inequality<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for operator!=
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 97
	Broken copy

	--Regular Semantics--
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Inconsistent copy constructor (x)
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 108
	Broken para-copy

	--Regular Semantics--
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Inconsistent para-copy construction
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 119
	Broken move

	--Regular Semantics--
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Inconsistent move construction
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 130
	Broken para-move

	--Regular Semantics--
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Inconsistent para-move construction
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 141
	Broken copy assignment

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Inconsistent copy assignment (from y)
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 152
	Broken move assignment

	--Regular Semantics--
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 170
	Broken copy value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, false> >]

	Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Either mutation is not doing anything following copy construction or value semantics are broken, with mutation of an object also changing the object from which it was copied
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 189
	Broken copy assignment value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, false> >]

	Either mutation is not doing anything following copy assignment or value semantics are broken, with mutation of an object also changing the object from which it was assigned
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 208
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 209
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 220
	Inefficient move

	--Regular Semantics--
	[sequoia::testing::inefficient_move<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 238
	Inefficient para-copy

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 256
	Inefficient para-move

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 267
	Broken check invariant

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 278
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 280
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 282
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 297
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 315
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 317
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 319
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 334
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 52
	Broken equality

	--Regular Semantics--
	[sequoia::testing::broken_equality<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 63
	Broken inequality

	--Regular Semantics--
	[sequoia::testing::broken_inequality<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Inequality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 74
	Inefficient equality

	--Regular Semantics--
	[sequoia::testing::inefficient_equality<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for operator==
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 85
	Inefficient inequality

	--Regular Semantics--
	[sequoia::testing::inefficient_inequality<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for operator!=
	Unexpected allocation detected (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 97
	Broken copy

	--Regular Semantics--
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Inconsistent copy constructor (x)
	[sequoia::testing::broken_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 108
	Broken para-copy

	--Regular Semantics--
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Inconsistent para-copy construction
	[sequoia::testing::broken_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 119
	Broken move

	--Regular Semantics--
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Inconsistent move construction
	[sequoia::testing::broken_move<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 130
	Broken para-move

	--Regular Semantics--
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Inconsistent para-move construction
	[sequoia::testing::broken_para_move<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 141
	Broken copy assignment

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Inconsistent copy assignment (from y)
	[sequoia::testing::broken_copy_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 152
	Broken move assignment

	--Regular Semantics--
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 170
	Broken copy value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, true> >]

	Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	Either mutation is not doing anything following copy construction or value semantics are broken, with mutation of an object also changing the object from which it was copied
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 189
	Broken copy assignment value semantics

	--Regular Semantics--
	[sequoia::testing::broken_copy_assignment_value_semantics<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, true> >]

	Either mutation is not doing anything following copy assignment or value semantics are broken, with mutation of an object also changing the object from which it was assigned
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 208
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 209
	Inefficient copy

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 220
	Inefficient move

	--Regular Semantics--
	[sequoia::testing::inefficient_move<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 238
	Inefficient para-copy

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 256
	Inefficient para-move

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 267
	Broken check invariant

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 278
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 280
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 282
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 297
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 315
	Incorrect copy x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 317
	Incorrect copy y allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 319
	Incorrect mutation allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 334
	Incorrect copy assign y to x allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 51
	Incorrect para-move allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 54
	Incorrect mutation allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 59
	Incorrect assignment allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 72
	Broken move

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Inconsistent move construction
	[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 84
	Broken move assignment

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 110
	Inefficient move

	--Move-only Semantics--
	[sequoia::testing::move_only_inefficient_move<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 122
	Inefficient move assignment

	--Move-only Semantics--
	[sequoia::testing::move_only_inefficient_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 135
	Invariant violated: x != xClone

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Precondition - for checking move-only semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 138
	Invariant violated: y != YClone

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Precondition - for checking move-only semantics, y and yClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 141
	Invariant violated: x == y

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 51
	Incorrect para-move allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 54
	Incorrect mutation allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 59
	Incorrect assignment allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 72
	Broken move

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Inconsistent move construction
	[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 84
	Broken move assignment

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 98
	Broken swap

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Inconsistent Swap (y)
	[sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 2 
	Predicted: 1 

	Inconsistent Swap (x)
	[sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 110
	Inefficient move

	--Move-only Semantics--
	[sequoia::testing::move_only_inefficient_move<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 122
	Inefficient move assignment

	--Move-only Semantics--
	[sequoia::testing::move_only_inefficient_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 135
	Invariant violated: x != xClone

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Precondition - for checking move-only semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 138
	Invariant violated: y != YClone

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Precondition - for checking move-only semantics, y and yClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 141
	Invariant violated: x == y

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 51
	Incorrect para-move allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 54
	Incorrect mutation allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 72
	Broken move

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Inconsistent move construction
	[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 84
	Broken move assignment

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 110
	Inefficient move

	--Move-only Semantics--
	[sequoia::testing::move_only_inefficient_move<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 122
	Inefficient move assignment

	--Move-only Semantics--
	[sequoia::testing::move_only_inefficient_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 135
	Invariant violated: x != xClone

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Precondition - for checking move-only semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 138
	Invariant violated: y != YClone

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Precondition - for checking move-only semantics, y and yClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 141
	Invariant violated: x == y

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 51
	Incorrect para-move allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 54
	Incorrect mutation allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 72
	Broken move

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Inconsistent move construction
	[sequoia::testing::move_only_broken_move<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 84
	Broken move assignment

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Inconsistent move assignment (from y)
	[sequoia::testing::move_only_broken_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 98
	Broken swap

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Inconsistent Swap (y)
	[sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 2 
	Predicted: 1 

	Inconsistent Swap (x)
	[sequoia::testing::move_only_broken_swap<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 110
	Inefficient move

	--Move-only Semantics--
	[sequoia::testing::move_only_inefficient_move<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 122
	Inefficient move assignment

	--Move-only Semantics--
	[sequoia::testing::move_only_inefficient_move_assignment<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 135
	Invariant violated: x != xClone

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Precondition - for checking move-only semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 138
	Invariant violated: y != YClone

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Precondition - for checking move-only semantics, y and yClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 141
	Invariant violated: x == y

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]

	Precondition - for checking semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 92
	Incorrect copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 97
	Incorrect copy y outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 102
	Incorrect mutation outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 107
	Incorrect assignment outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 3

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 112
	Incorrect para copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 117
	Incorrect para move x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 122
	Incorrect copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 127
	Incorrect copy y inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 132
	Incorrect mutation inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 137
	Incorrect assignment inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 142
	Incorrect para copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 147
	Incorrect para move x inener allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 92
	Incorrect copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 97
	Incorrect copy y outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 102
	Incorrect mutation outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 107
	Incorrect assignment outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 3

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 112
	Incorrect para copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 117
	Incorrect para move x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 122
	Incorrect copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 127
	Incorrect copy y inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 132
	Incorrect mutation inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 137
	Incorrect assignment inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 142
	Incorrect para copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 147
	Incorrect para move x inener allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 92
	Incorrect copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 97
	Incorrect copy y outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 102
	Incorrect mutation outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 107
	Incorrect assignment outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 112
	Incorrect para copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 117
	Incorrect para move x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 122
	Incorrect copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 127
	Incorrect copy y inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 132
	Incorrect mutation inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 137
	Incorrect assignment inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 142
	Incorrect para copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 147
	Incorrect para move x inener allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 92
	Incorrect copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 97
	Incorrect copy y outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 102
	Incorrect mutation outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 107
	Incorrect assignment outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 112
	Incorrect para copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 117
	Incorrect para move x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 122
	Incorrect copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 127
	Incorrect copy y inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 132
	Incorrect mutation inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 137
	Incorrect assignment inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 142
	Incorrect para copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 147
	Incorrect para move x inener allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 92
	Incorrect copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 97
	Incorrect copy y outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 102
	Incorrect mutation outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 107
	Incorrect assignment outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 112
	Incorrect para copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 117
	Incorrect para move x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 122
	Incorrect copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 127
	Incorrect copy y inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 132
	Incorrect mutation inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 137
	Incorrect assignment inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 142
	Incorrect para copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 147
	Incorrect para move x inener allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 92
	Incorrect copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 97
	Incorrect copy y outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 102
	Incorrect mutation outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 107
	Incorrect assignment outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 112
	Incorrect para copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 117
	Incorrect para move x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 122
	Incorrect copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 127
	Incorrect copy y inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 132
	Incorrect mutation inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 137
	Incorrect assignment inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 142
	Incorrect para copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 147
	Incorrect para move x inener allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 92
	Incorrect copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 97
	Incorrect copy y outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 102
	Incorrect mutation outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 107
	Incorrect assignment outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 112
	Incorrect para copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 117
	Incorrect para move x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 122
	Incorrect copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 127
	Incorrect copy y inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 132
	Incorrect mutation inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 137
	Incorrect assignment inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 142
	Incorrect para copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 147
	Incorrect para move x inener allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 92
	Incorrect copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 97
	Incorrect copy y outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 102
	Incorrect mutation outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 107
	Incorrect assignment outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 112
	Incorrect para copy x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 117
	Incorrect para move x outer allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 122
	Incorrect copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for copy construction (x)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 127
	Incorrect copy y inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 132
	Incorrect mutation inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	Unexpected allocation detected following mutation after swap (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 3

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 137
	Incorrect assignment inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for copy assignment (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1

	Unexpected allocation detected for copy assignment (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 142
	Incorrect para copy x inner allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for para-copy construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 4

	=======================================

	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 147
	Incorrect para move x inener allocs

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 95
	Incorrect assigment outer allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 105
	Incorrect mutation outer allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 114
	Incorrect para move outer allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 125
	Incorrect assigment inner allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 135
	Incorrect mutation inner allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 143
	Incorrect para move inner allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 95
	Incorrect assigment outer allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 105
	Incorrect mutation outer allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 114
	Incorrect para move outer allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 125
	Incorrect assigment inner allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for move assignment (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 135
	Incorrect mutation inner allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 143
	Incorrect para move inner allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 105
	Incorrect mutation outer allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 114
	Incorrect para move outer allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 135
	Incorrect mutation inner allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 143
	Incorrect para move inner allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 105
	Incorrect mutation outer allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 114
	Incorrect para move outer allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 135
	Incorrect mutation inner allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected following mutation after assignment
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 143
	Incorrect para move inner allocs

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]

	Unexpected allocation detected for para-move construction (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0

	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 197

	[bool]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 199

	[int]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 200

	[double]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 202

	[std::pair<int, double>]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 204

	[std::tuple<int, double, float>]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 206

	Expected Exception Type:
	[std::runtime_error]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 211
	Empty vector check which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 212
	One element vector check which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 213
	Multi-element vector comparison which should pass

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 217
	Iterators demarcate identical elements


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 219
	Differing strings

	[std::basic_string<char, std::char_traits<char>, std::allocator<char> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 232

	[std::tuple<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, std::set<double, std::less<double>, std::allocator<double> >, std::complex<double> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 237

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 242


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 244

	[std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 250


	=======================================

	False Positive Failure:
	../Tests/TestFramework/UnitTestDiagnostics.cpp, Line 253

	[std::vector<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> >, std::allocator<sequoia::testing::perfectly_normal_beast<int, std::allocator<int> > > >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 50

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, std::allocator<int> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/PerformanceTestDiagnostics.cpp, Line 67
	Performance Test which should pass

	Fast Task duration: 0.00124745s +- 4 * 0.000107301
	Slow Task duration: 0.00217657s +- 4 * 8.65854e-05 [1.74482; (1.8, 2.1)]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/PerformanceTestDiagnostics.cpp, Line 68
	Performance Test which should pass

	Fast Task duration: 0.00121167s +- 4 * 9.1282e-05
	Slow Task duration: 0.00487024s +- 4 * 0.00048451 [4.01943; (3.6, 4.1)]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 76

	[double]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 77

	[double]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 79

	[double]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 80

	[double]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 86


	=======================================

	False Positive Failure:
	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 91

	[std::vector<double, std::allocator<double> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/FuzzyTestDiagnostics.cpp, Line 94

	[std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 373

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 375

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 394

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 396

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 415

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 434

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 453

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, false, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 479

	--Regular Semantics--
	[sequoia::testing::doubly_normal_beast<int, double, sequoia::testing::shared_counting_allocator<int, false, false, false>, sequoia::testing::shared_counting_allocator<double, false, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 373

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 375

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 394

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 396

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 415

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 434

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 453

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, false, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 479

	--Regular Semantics--
	[sequoia::testing::doubly_normal_beast<int, double, sequoia::testing::shared_counting_allocator<int, false, false, true>, sequoia::testing::shared_counting_allocator<double, false, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 373

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 375

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 394

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 396

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 415

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 434

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 453

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, false, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 479

	--Regular Semantics--
	[sequoia::testing::doubly_normal_beast<int, double, sequoia::testing::shared_counting_allocator<int, false, true, false>, sequoia::testing::shared_counting_allocator<double, false, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 373

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 375

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 394

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 396

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, false, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 415

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 434

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 453

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, false, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 479

	--Regular Semantics--
	[sequoia::testing::doubly_normal_beast<int, double, sequoia::testing::shared_counting_allocator<int, false, true, true>, sequoia::testing::shared_counting_allocator<double, false, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 373

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 375

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 394

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 396

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 415

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 434

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 453

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 479

	--Regular Semantics--
	[sequoia::testing::doubly_normal_beast<int, double, sequoia::testing::shared_counting_allocator<int, true, false, false>, sequoia::testing::shared_counting_allocator<double, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 373

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 375

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 394

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 396

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 415

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 434

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 453

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 479

	--Regular Semantics--
	[sequoia::testing::doubly_normal_beast<int, double, sequoia::testing::shared_counting_allocator<int, true, false, true>, sequoia::testing::shared_counting_allocator<double, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 373

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 375

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 394

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 396

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 415

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 434

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 453

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 479

	--Regular Semantics--
	[sequoia::testing::doubly_normal_beast<int, double, sequoia::testing::shared_counting_allocator<int, true, true, false>, sequoia::testing::shared_counting_allocator<double, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 373

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 375

	--Regular Semantics--
	[sequoia::testing::perfectly_normal_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 394

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 396

	--Regular Semantics--
	[sequoia::testing::perfectly_sharing_beast<int, std::shared_ptr<int>, sequoia::testing::shared_counting_allocator<std::shared_ptr<int>, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 415

	--Regular Semantics--
	[sequoia::testing::inefficient_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 434

	--Regular Semantics--
	[sequoia::testing::inefficient_para_copy<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 453

	--Regular Semantics--
	[sequoia::testing::inefficient_para_move<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/RegularAllocationTestDiagnostics.cpp, Line 479

	--Regular Semantics--
	[sequoia::testing::doubly_normal_beast<int, double, sequoia::testing::shared_counting_allocator<int, true, true, true>, sequoia::testing::shared_counting_allocator<double, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 181
	Move-only beast

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 184
	Move-only beast

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 181
	Move-only beast

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 184
	Move-only beast

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 181
	Move-only beast

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 184
	Move-only beast

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 181
	Move-only beast

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyAllocationTestDiagnostics.cpp, Line 184
	Move-only beast

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, sequoia::testing::shared_counting_allocator<int, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 42

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 50

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 42

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 50

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 42

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 50

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 42

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 50

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, false, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 42

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 50

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 42

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 50

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 42

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 50

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 42

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/ScopedAllocationTestDiagnostics.cpp, Line 50

	--Regular Semantics--
	[sequoia::testing::perfectly_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 48

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 48

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, false, true> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 48

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, false> >]


	=======================================

	False Positive Failure:
	../Tests/TestFramework/MoveOnlyScopedAllocationTestDiagnostics.cpp, Line 48

	--Move-only Semantics--
	[sequoia::testing::move_only_scoped_beast<sequoia::testing::shared_counting_allocator<char, true, true, true> >]


	=======================================

