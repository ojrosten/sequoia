	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 26
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 28
	[int]
	operator== returned false
	Obtained : 5
	Predicted: 4


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 29
	[double]
	operator== returned false
	Obtained : 6.5
	Predicted: 5.6


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 31
	[std::__1::pair<int, double>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 31
	[std::__1::pair<int, double>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 31
	Second element of pair is incorrect
	[double]
	operator== returned false
	Obtained : 7.8
	Predicted: -7.8


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 32
	[std::__1::pair<int, double>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 32
	[std::__1::pair<int, double>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 32
	First element of pair is incorrect
	[int]
	operator== returned false
	Obtained : 5
	Predicted: -5


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 34
	[std::__1::tuple<int, double, float>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 34
	[std::__1::tuple<int, double, float>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 34
	Element 0 of tuple incorrect
	[int]
	operator== returned false
	Obtained : 4
	Predicted: 0


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 35
	[std::__1::tuple<int, double, float>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 35
	[std::__1::tuple<int, double, float>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 35
	Element 1 of tuple incorrect
	[double]
	operator== returned false
	Obtained : 3.4
	Predicted: 0


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 36
	[std::__1::tuple<int, double, float>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 36
	[std::__1::tuple<int, double, float>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 36
	Element 2 of tuple incorrect
	[float]
	operator== returned false
	Obtained : -9.2
	Predicted: -0


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 38
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 39
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 41:
	Exception expected but nothing thrown
	Expected Exception Type:
	[std::runtime_error]
	No exception thrown

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 42:
	Exception thrown but of wrong type
	Expected Exception Type:
	[std::runtime_error]
	Unexpected exception thrown (caught by std::exception&):
	"Error"

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 43:
	Exception thrown but of unknown type
	Expected Exception Type:
	[std::runtime_error]
	Unknown exception thrown

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 48:
	Empty vector check which should fail
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 48:
	Empty vector check which should fail
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 48:
	Empty vector check which should fail
	Container size wrong
	[long]
	operator== returned false
	Obtained : 0
	Predicted: 1


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 49:
	One element vector check which should fail due to wrong value
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 49:
	One element vector check which should fail due to wrong value
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 49:
	One element vector check which should fail due to wrong value element 0

	[double]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 50:
	One element vector check which should fail due to differing sizes
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 50:
	One element vector check which should fail due to differing sizes
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 50:
	One element vector check which should fail due to differing sizes
	Container size wrong
	[long]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 51:
	Multi-element vector comparison which should fail due to last element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 51:
	Multi-element vector comparison which should fail due to last element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 51:
	Multi-element vector comparison which should fail due to last element element 1

	[double]
	operator== returned false
	Obtained : 5
	Predicted: 4


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 52:
	Multi-element vector comparison which should fail due to first element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 52:
	Multi-element vector comparison which should fail due to first element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 52:
	Multi-element vector comparison which should fail due to first element element 0

	[double]
	operator== returned false
	Obtained : 1
	Predicted: 0


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 53:
	Multi-element vector comparison which should fail due to middle element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 53:
	Multi-element vector comparison which should fail due to middle element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 53:
	Multi-element vector comparison which should fail due to middle element element 2

	[double]
	operator== returned false
	Obtained : 3.2
	Predicted: 3.3


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 54:
	Multi-element vector comparison which should fail due to different sizes
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 54:
	Multi-element vector comparison which should fail due to different sizes
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 54:
	Multi-element vector comparison which should fail due to different sizes
	Container size wrong
	[long]
	operator== returned false
	Obtained : 3
	Predicted: 2


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 58:
	Iterators demarcate differing number of elements
	Container size wrong
	[long]
	operator== returned false
	Obtained : 4
	Predicted: 6


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 59:
	Iterators demarcate differing elements element 0

	[float]
	operator== returned false
	Obtained : -4.3
	Predicted: 1.1


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 59:
	Iterators demarcate differing elements element 1

	[float]
	operator== returned false
	Obtained : 2.8
	Predicted: -4.3


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 59:
	Iterators demarcate differing elements element 2

	[float]
	operator== returned false
	Obtained : 6.2
	Predicted: 2.8


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 59:
	Iterators demarcate differing elements element 3

	[float]
	operator== returned false
	Obtained : 7.3
	Predicted: 6.2


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 62:
	Differing strings
	[std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >]
	operator== returned false
	Obtained : what?!
	Predicted: Hello, World!


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 72:
	Performance Test for which fast task is too slow, [1, (2.0, 2.0)
	Fast Task duration: 0.0013315s +- 3 * 4.67964e-05
	Slow Task duration: 0.00132099s +- 3 * 4.03203e-05 [0.992109; (2, 2)]

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 76:
	Performance Test for which fast task is too slow [1, (2.0, 3.0)
	Fast Task duration: 0.00138779s +- 3 * 7.89148e-06
	Slow Task duration: 0.00139183s +- 3 * 4.00206e-06 [1.00291; (2, 3)]

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 80:
	Performance Test for which fast task is too fast [4, (2.0, 2.5)]
	Fast Task duration: 0.00138297s +- 3 * 3.84199e-05
	Slow Task duration: 0.00489683s +- 3 * 0.000388715 [3.54082; (2, 2.5)]

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	[std::__1::tuple<std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >, std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >, std::__1::complex<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	[std::__1::tuple<std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >, std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >, std::__1::complex<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	Element 0 of tuple incorrect
	[std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	Element 0 of tuple incorrect
	[std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	Element 0 of tuple incorrect element 0

	[std::__1::pair<int, float>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	Element 0 of tuple incorrect element 0

	[std::__1::pair<int, float>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	Element 0 of tuple incorrect element 0

	First element of pair is incorrect
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 101
	[std::__1::tuple<std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >, std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >, std::__1::complex<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 101
	[std::__1::tuple<std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >, std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >, std::__1::complex<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 101
	Element 1 of tuple incorrect
	[std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 101
	Element 1 of tuple incorrect
	[std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 101
	Element 1 of tuple incorrect element 2

	[double]
	operator== returned false
	Obtained : 3.3
	Predicted: 3.4


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 107:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 108:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 109:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 109:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 109:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 109:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 109:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 110:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 111:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 111:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 111:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 112:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 112:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 113:
	Broken swap Swap
	[sequoia::unit_testing::broken_swap<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 113:
	Broken swap Swap
	[sequoia::unit_testing::broken_swap<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 2 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 114:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 114:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 115:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 117:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 119:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 120:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 121:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 121:
	Broken move Swap
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 122:
	Broken move Swap
	[sequoia::unit_testing::broken_swap<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 2 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 122:
	Broken move Swap
	[sequoia::unit_testing::broken_swap<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 123:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 123:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 124:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 125:
	Broken check invariant Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 126:
	Broken check invariant Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 52:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 60:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -3
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 100:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 161
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 177
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 186:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 52:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 60:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -3
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 100:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 161
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 177
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 186:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 52:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 60:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -3
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 100:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 161
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 177
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 186:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 52:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 60:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -3
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 100:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 161
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 177
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 186:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 52:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 60:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -2
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 100:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 161
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 177
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 186:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 52:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 60:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -2
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 100:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 161
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 177
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 186:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 52:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 60:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -2
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 100:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 161
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 177
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 186:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 52:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 60:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 68:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 76:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -2
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 84:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 92:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 100:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 108:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 116:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -2
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 131:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 146:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 161
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 162
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 177
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 186:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 195:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 199:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 209:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 213:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 230:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 234:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 244:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 248:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 257 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 259 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 261 Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 261 Swap
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 263 Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 263 Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 265 Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 267 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 269 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 279
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 257 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 259 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 261 Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 261 Swap
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 263 Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 263 Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 265 Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 267 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 269 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 279
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 257 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 259 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 261 Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 261 Swap
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 263 Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 263 Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 265 Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 267 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 269 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 279
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 257 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 259 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 261 Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 261 Swap
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 263 Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 263 Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 265 Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 267 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 269 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 279
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 140
	[bool]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 142
	[int]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 143
	[double]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 145
	[bool]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 146
	[bool]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 148
	[bool]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 149
	[bool]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 151
	[std::__1::pair<int, double>]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 153
	[std::__1::tuple<int, double, float>]

	False Positive Failure:
		../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 155
	Expected Exception Type:
	[std::runtime_error]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 162:
	Empty vector check which should pass
	[std::__1::vector<double, std::__1::allocator<double> >]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 163:
	One element vector check which should pass
	[std::__1::vector<double, std::__1::allocator<double> >]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 164:
	Multi-element vector comparison which should pass
	[std::__1::vector<double, std::__1::allocator<double> >]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 168:
	Iterators demarcate identical elements
	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 170:
	Differing strings
	[std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >]

	False Positive Failure:
		../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 186:
	Performance Test which should pass
	Fast Task duration: 0.0013878s +- 3 * 1.11741e-05
	Slow Task duration: 0.00263116s +- 3 * 1.12974e-05 [1.89592; (1.9, 2.1)]

	False Positive Failure:
		../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 187:
	Performance Test which should pass
	Fast Task duration: 0.00140775s +- 3 * 3.40305e-05
	Slow Task duration: 0.00515434s +- 3 * 3.78199e-05 [3.66141; (3.9, 4.1)]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 200
	[std::__1::tuple<std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >, std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >, std::__1::complex<double> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 206
	[sequoia::unit_testing::perfectly_normal_beast<int, std::__1::allocator<int> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 207
	[sequoia::unit_testing::perfectly_normal_beast<int, std::__1::allocator<int> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 320
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 322
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 337
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 339
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 354
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 369
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 391
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, false, false, false>, sequoia::unit_testing::shared_counting_allocator<double, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 320
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 322
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 337
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 339
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 354
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 369
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 391
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, false, false, true>, sequoia::unit_testing::shared_counting_allocator<double, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 320
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 322
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 337
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 339
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 354
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 369
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 391
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, false, true, false>, sequoia::unit_testing::shared_counting_allocator<double, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 320
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 322
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 337
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 339
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 354
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 369
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 391
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, false, true, true>, sequoia::unit_testing::shared_counting_allocator<double, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 320
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 322
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 337
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 339
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 354
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 369
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 391
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, true, false, false>, sequoia::unit_testing::shared_counting_allocator<double, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 320
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 322
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 337
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 339
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 354
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 369
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 391
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, true, false, true>, sequoia::unit_testing::shared_counting_allocator<double, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 320
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 322
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 337
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 339
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 354
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 369
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 391
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, true, true, false>, sequoia::unit_testing::shared_counting_allocator<double, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 320
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 322
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 337
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 339
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 354
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 369
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 391
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, true, true, true>, sequoia::unit_testing::shared_counting_allocator<double, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 411
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 411
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 411
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestAllocatorDiagnostics.cpp, Line 411
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]

