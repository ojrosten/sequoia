	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 29
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 31
	[int]
	operator== returned false
	Obtained : 5
	Predicted: 4


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 32
	[double]
	operator== returned false
	Obtained : 6.5
	Predicted: 5.6


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 34
	[std::__1::pair<int, double>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 34
	[std::__1::pair<int, double>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 34
	Second element of pair is incorrect
	[double]
	operator== returned false
	Obtained : 7.8
	Predicted: -7.8


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 35
	[std::__1::pair<int, double>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 35
	[std::__1::pair<int, double>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 35
	First element of pair is incorrect
	[int]
	operator== returned false
	Obtained : 5
	Predicted: -5


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 37
	[std::__1::tuple<int, double, float>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 37
	[std::__1::tuple<int, double, float>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 37
	Element 0 of tuple incorrect
	[int]
	operator== returned false
	Obtained : 4
	Predicted: 0


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 38
	[std::__1::tuple<int, double, float>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 38
	[std::__1::tuple<int, double, float>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 38
	Element 1 of tuple incorrect
	[double]
	operator== returned false
	Obtained : 3.4
	Predicted: 0


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 39
	[std::__1::tuple<int, double, float>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 39
	[std::__1::tuple<int, double, float>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 39
	Element 2 of tuple incorrect
	[float]
	operator== returned false
	Obtained : -9.2
	Predicted: -0


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 41
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 42
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 44:
	Exception expected but nothing thrown
	Expected Exception Type:
	[std::runtime_error]
	No exception thrown

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 45:
	Exception thrown but of wrong type
	Expected Exception Type:
	[std::runtime_error]
	Unexpected exception thrown (caught by std::exception&):
	"Error"

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 46:
	Exception thrown but of unknown type
	Expected Exception Type:
	[std::runtime_error]
	Unknown exception thrown

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 51:
	Empty vector check which should fail
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 51:
	Empty vector check which should fail
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 51:
	Empty vector check which should fail container size wrong
	[long]
	operator== returned false
	Obtained : 0
	Predicted: 1


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 52:
	One element vector check which should fail due to wrong value
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 52:
	One element vector check which should fail due to wrong value
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 52:
	One element vector check which should fail due to wrong value element 0

	[double]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 53:
	One element vector check which should fail due to differing sizes
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 53:
	One element vector check which should fail due to differing sizes
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 53:
	One element vector check which should fail due to differing sizes container size wrong
	[long]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 54:
	Multi-element vector comparison which should fail due to last element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 54:
	Multi-element vector comparison which should fail due to last element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 54:
	Multi-element vector comparison which should fail due to last element element 1

	[double]
	operator== returned false
	Obtained : 5
	Predicted: 4


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 55:
	Multi-element vector comparison which should fail due to first element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 55:
	Multi-element vector comparison which should fail due to first element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 55:
	Multi-element vector comparison which should fail due to first element element 0

	[double]
	operator== returned false
	Obtained : 1
	Predicted: 0


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 56:
	Multi-element vector comparison which should fail due to middle element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 56:
	Multi-element vector comparison which should fail due to middle element
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 56:
	Multi-element vector comparison which should fail due to middle element element 2

	[double]
	operator== returned false
	Obtained : 3.2
	Predicted: 3.3


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 57:
	Multi-element vector comparison which should fail due to different sizes
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 57:
	Multi-element vector comparison which should fail due to different sizes
	[std::__1::vector<double, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 57:
	Multi-element vector comparison which should fail due to different sizes container size wrong
	[long]
	operator== returned false
	Obtained : 3
	Predicted: 2


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 61:
	Iterators demarcate differing number of elements container size wrong
	[long]
	operator== returned false
	Obtained : 4
	Predicted: 6


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 62:
	Iterators demarcate differing elements element 0

	[float]
	operator== returned false
	Obtained : -4.3
	Predicted: 1.1


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 62:
	Iterators demarcate differing elements element 1

	[float]
	operator== returned false
	Obtained : 2.8
	Predicted: -4.3


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 62:
	Iterators demarcate differing elements element 2

	[float]
	operator== returned false
	Obtained : 6.2
	Predicted: 2.8


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 62:
	Iterators demarcate differing elements element 3

	[float]
	operator== returned false
	Obtained : 7.3
	Predicted: 6.2


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 72:
	Performance Test for which fast task is too slow, [1, (2.0, 2.0)
	Fast Task duration: 0.00134046s +- 3 * 0.000126933
	Slow Task duration: 0.0013736s +- 3 * 5.91533e-05 [1.02472; (2, 2)]

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 76:
	Performance Test for which fast task is too slow [1, (2.0, 3.0)
	Fast Task duration: 0.00134737s +- 3 * 6.21687e-05
	Slow Task duration: 0.00133865s +- 3 * 4.63983e-05 [0.99353; (2, 3)]

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 80:
	Performance Test for which fast task is too fast [4, (2.0, 2.5)]
	Fast Task duration: 0.0013567s +- 3 * 6.08082e-05
	Slow Task duration: 0.00479636s +- 3 * 0.000487807 [3.53531; (2, 2.5)]

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	[std::__1::tuple<std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >, std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >, std::__1::complex<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	[std::__1::tuple<std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >, std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >, std::__1::complex<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	Element 0 of tuple incorrect
	[std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	Element 0 of tuple incorrect
	[std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	Element 0 of tuple incorrect element 0

	[std::__1::pair<int, float>]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	Element 0 of tuple incorrect element 0

	[std::__1::pair<int, float>]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 96
	Element 0 of tuple incorrect element 0

	First element of pair is incorrect
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 101
	[std::__1::tuple<std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >, std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >, std::__1::complex<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 101
	[std::__1::tuple<std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >, std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >, std::__1::complex<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 101
	Element 1 of tuple incorrect
	[std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >]
	operator== returned false

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 101
	Element 1 of tuple incorrect
	[std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >]
	operator!= returned true

	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 101
	Element 1 of tuple incorrect element 2

	[double]
	operator== returned false
	Obtained : 3.3
	Predicted: 3.4


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 107:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 108:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 109:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 109:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 109:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 109:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 109:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 110:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 111:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 111:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 111:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 112:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 112:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 113:
	Broken swap Swap
	[sequoia::unit_testing::broken_swap<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 113:
	Broken swap Swap
	[sequoia::unit_testing::broken_swap<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 2 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 114:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 114:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 115:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 116:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 118:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 119:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 120:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 120:
	Broken move Swap
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 121:
	Broken move Swap
	[sequoia::unit_testing::broken_swap<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 2 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 121:
	Broken move Swap
	[sequoia::unit_testing::broken_swap<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 1 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 122:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 122:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 123:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 124:
	Broken check invariant Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 125:
	Broken check invariant Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 161:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 169:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -3
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 209:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 270
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 286
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 295:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 161:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 169:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -3
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 209:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 270
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 286
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 295:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 161:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 169:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -3
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 209:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 270
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 286
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 295:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 161:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 169:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -3
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 209:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 270
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 286
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 295:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, false, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 161:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 169:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -2
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 209:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 270
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 286
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 295:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 161:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 169:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -2
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 209:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 270
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 286
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 295:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 161:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 169:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -2
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 209:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 270
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 286
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 295:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 161:
	Broken equality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 169:
	Broken inequality Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Copy constructor (x)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Equality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Swap
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : -1
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy Move assignment (from y)
	[sequoia::unit_testing::broken_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 177:
	Broken copy
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -4
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Copy-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc Move-like construction
	[sequoia::unit_testing::broken_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 185:
	Broken copy alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move constructor
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : -2
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move Move-like construction
	[sequoia::unit_testing::broken_move<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 193:
	Broken move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc Move-like construction
	[sequoia::unit_testing::broken_move_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 201:
	Broken move alloc
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 209:
	Inefficient move
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment (from y)
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Inequality operator
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Move constructor
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 217:
	Broken copy assignment Copy assignment
	[sequoia::unit_testing::broken_copy_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 5 6 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Swap
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment Move assignment (from y)
	[sequoia::unit_testing::broken_move_assignment<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]
	operator== returned false
	Obtained : 1 
	Predicted: 5 6 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 225:
	Broken move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Move assignment x allocations
	[int]
	operator== returned false
	Obtained : -2
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy constrution/broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 240:
	Broken copy value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy assignment/ broken value semantics
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following copy then swap
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 255:
	Broken copy assignment value semantics Mutation is not doing anything following move allocation assignment
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 270
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 271
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 286
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 3


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 295:
	Broken check invariant Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 304:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 308:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 318:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 322:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 339:
	Incorrect copy x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Copy construction allocation (x)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Para copy construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 343:
	Incorrect copy y allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Copy assignment x allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 353:
	Incorrect copy assign y to x allocs
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Copy assignment y allocations
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after swap
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	x allocations
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 357:
	Incorrect mutation allocs mutation after move allocation assignment
	[sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true>]
	Mutation allocation after move-like construction
	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 366 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 368 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 370 Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 370 Swap
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 372 Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 372 Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 374 Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 376 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 378 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 388
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 366 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 368 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 370 Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 370 Swap
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 372 Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 372 Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 374 Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 376 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 378 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 388
	[sequoia::unit_testing::shared_counting_allocator<int, true, false, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 366 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 368 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 370 Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 370 Swap
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 372 Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 372 Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 374 Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 376 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 378 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 388
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, false>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 366 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 368 Equality operator is inconsistent
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 370 Move constructor
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 370 Swap
	[sequoia::unit_testing::broken_move<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 1 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 372 Move assignment
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 372 Swap
	[sequoia::unit_testing::broken_move_assignment<int, std::__1::allocator<int> >]
	operator== returned false
	Obtained : 
	Predicted: 2 


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 374 Precondition - for checking regular semantics, x and y are assumed to be different
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 376 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 378 Precondition - for checking regular semantics, x and xClone are assumed to be equal
	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 388
	[sequoia::unit_testing::shared_counting_allocator<int, true, true, true>]
	Para move construction allocation (y)
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 406
	[bool]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 408
	[int]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 409
	[double]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 411
	[bool]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 412
	[bool]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 414
	[bool]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 415
	[bool]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 417
	[std::__1::pair<int, double>]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 419
	[std::__1::tuple<int, double, float>]

	False Positive Failure:
		../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 421
	Expected Exception Type:
	[std::runtime_error]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 428:
	Empty vector check which should pass
	[std::__1::vector<double, std::__1::allocator<double> >]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 429:
	One element vector check which should pass
	[std::__1::vector<double, std::__1::allocator<double> >]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 430:
	Multi-element vector comparison which should pass
	[std::__1::vector<double, std::__1::allocator<double> >]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 434:
	Iterators demarcate identical elements
	False Positive Failure:
		../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 450:
	Performance Test which should pass
	Fast Task duration: 0.00138827s +- 3 * 7.46542e-06
	Slow Task duration: 0.00263586s +- 3 * 9.38663e-06 [1.89866; (1.9, 2.1)]

	False Positive Failure:
		../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 451:
	Performance Test which should pass
	Fast Task duration: 0.00137484s +- 3 * 4.34154e-05
	Slow Task duration: 0.00496077s +- 3 * 0.000423567 [3.60827; (3.9, 4.1)]

	False Positive Failure:
	../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 464
	[std::__1::tuple<std::__1::vector<std::__1::pair<int, float>, std::__1::allocator<std::__1::pair<int, float> > >, std::__1::set<double, std::__1::less<double>, std::__1::allocator<double> >, std::__1::complex<double> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 470
	[sequoia::unit_testing::perfectly_normal_beast<int, std::__1::allocator<int> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 471
	[sequoia::unit_testing::perfectly_normal_beast<int, std::__1::allocator<int> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 506
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 508
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 523
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 525
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 540
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 555
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 577
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, false, false, false>, sequoia::unit_testing::shared_counting_allocator<double, false, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 506
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 508
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 523
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 525
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 540
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 555
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 577
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, false, false, true>, sequoia::unit_testing::shared_counting_allocator<double, false, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 506
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 508
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 523
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 525
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 540
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 555
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 577
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, false, true, false>, sequoia::unit_testing::shared_counting_allocator<double, false, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 506
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 508
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 523
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 525
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 540
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 555
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 577
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, false, true, true>, sequoia::unit_testing::shared_counting_allocator<double, false, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 506
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 508
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 523
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 525
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 540
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 555
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 577
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, true, false, false>, sequoia::unit_testing::shared_counting_allocator<double, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 506
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 508
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 523
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 525
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 540
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 555
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 577
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, true, false, true>, sequoia::unit_testing::shared_counting_allocator<double, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 506
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 508
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 523
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 525
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 540
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 555
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 577
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, true, true, false>, sequoia::unit_testing::shared_counting_allocator<double, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 506
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 508
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 523
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 525
	[sequoia::unit_testing::perfectly_sharing_beast<int, std::__1::shared_ptr<int>, sequoia::unit_testing::shared_counting_allocator<std::__1::shared_ptr<int>, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 540
	[sequoia::unit_testing::inefficient_copy<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 555
	[sequoia::unit_testing::inefficient_copy_alloc<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 577
	[sequoia::unit_testing::doubly_normal_beast<int, double, sequoia::unit_testing::shared_counting_allocator<int, true, true, true>, sequoia::unit_testing::shared_counting_allocator<double, true, true, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 597
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 597
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, false, true> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 597
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, false> >]

	False Positive Failure:
	Regular Semantics ../UnitTests/UnitTestFramework/UnitTestDiagnostics.cpp, Line 597
	[sequoia::unit_testing::perfectly_normal_beast<int, sequoia::unit_testing::shared_counting_allocator<int, true, true, true> >]

