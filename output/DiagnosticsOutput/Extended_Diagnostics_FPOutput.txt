	Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 26
	Broken equality

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_equality<int, std::allocator<int> >]

	  operator== is inconsistent
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 27
	Broken inequality

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_inequality<int, std::allocator<int> >]

	  operator== is inconsistent
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 28
	Broken move

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move<int, std::allocator<int> >]

	  Inconsistent move construction
	  [sequoia::testing::move_only_broken_move<int, std::allocator<int> >]
	  operator== returned false
	  Obtained : 
	  Predicted: 1 

	=======================================

	Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 29
	Broken swap

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_swap<int, std::allocator<int> >]

	  Inconsistent Swap (y)
	  [sequoia::testing::move_only_broken_swap<int, std::allocator<int> >]
	  operator== returned false
	  Obtained : 2 
	  Predicted: 1 

	  Inconsistent Swap (x)
	  [sequoia::testing::move_only_broken_swap<int, std::allocator<int> >]
	  operator== returned false
	  Obtained : 1 
	  Predicted: 2 

	=======================================

	Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 30
	Broken move assignment

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_move_assignment<int, std::allocator<int> >]

	  Inconsistent move assignment (from y)
	  [sequoia::testing::move_only_broken_move_assignment<int, std::allocator<int> >]
	  operator== returned false
	  Obtained : 1 
	  Predicted: 2 

	=======================================

	Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 31
	Broken check invariant

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, std::allocator<int> >]

	  Precondition - for checking semantics, x and y are assumed to be different
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 32
	Broken check invariant

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, std::allocator<int> >]

	  Precondition - for checking move-only semantics, x and xClone are assumed to be equal
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 33
	Broken check invariant

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, std::allocator<int> >]

	  Precondition - for checking move-only semantics, y and yClone are assumed to be equal
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableMoveOnlyTestDiagnostics.cpp, Line 29
	Broken check invariant

	--Move-only Semantics--
	[sequoia::testing::orderable_move_only_beast<int, std::allocator<int> >]

	  Precondition - for checking semantics, order must be weak_ordering::less or weak_ordering::greater
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableMoveOnlyTestDiagnostics.cpp, Line 30
	Broken check invariant

	--Move-only Semantics--
	[sequoia::testing::orderable_move_only_beast<int, std::allocator<int> >]

	  Precondition - for ordered semantics, it is assumed that y > x
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableMoveOnlyTestDiagnostics.cpp, Line 31
	Broken check invariant

	--Move-only Semantics--
	[sequoia::testing::orderable_move_only_beast<int, std::allocator<int> >]

	  Precondition - for ordered semantics, it is assumed that y > x
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableMoveOnlyTestDiagnostics.cpp, Line 37

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_less<int, std::allocator<int> >]

	  operator> and operator< are inconsistent
	  [bool]
	  check failed

	  operator< and operator<= are inconsistent
	  [bool]
	  check failed

	  operator< and operator>= are inconsistent
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableMoveOnlyTestDiagnostics.cpp, Line 43

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_lesseq<int, std::allocator<int> >]

	  operator< and operator<= are inconsistent
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableMoveOnlyTestDiagnostics.cpp, Line 49

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_greater<int, std::allocator<int> >]

	  operator> and operator< are inconsistent
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableMoveOnlyTestDiagnostics.cpp, Line 55

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_greatereq<int, std::allocator<int> >]

	  operator< and operator<= are inconsistent
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableMoveOnlyTestDiagnostics.cpp, Line 61

	--Move-only Semantics--
	[sequoia::testing::move_only_inverted_comparisons<int, std::allocator<int> >]

	  Precondition - for ordered semantics, it is assumed that y > x
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableMoveOnlyTestDiagnostics.cpp, Line 67

	--Move-only Semantics--
	[sequoia::testing::move_only_broken_spaceship<int, std::allocator<int> >]

	  operator< and operator<=> are inconsistent
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 29
	Broken check invariant

	--Regular Semantics--
	[sequoia::testing::orderable_regular_beast<int, std::allocator<int> >]

	  Precondition - for checking semantics, order must be weak_ordering::less or weak_ordering::greater
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 30
	Broken check invariant

	--Regular Semantics--
	[sequoia::testing::orderable_regular_beast<int, std::allocator<int> >]

	  Precondition - for ordered semantics, it is assumed that y > x
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 36

	--Regular Semantics--
	[sequoia::testing::regular_broken_less<int, std::allocator<int> >]

	  operator> and operator< are inconsistent
	  [bool]
	  check failed

	  operator< and operator<= are inconsistent
	  [bool]
	  check failed

	  operator< and operator>= are inconsistent
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 42

	--Regular Semantics--
	[sequoia::testing::regular_broken_lesseq<int, std::allocator<int> >]

	  operator< and operator<= are inconsistent
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 48

	--Regular Semantics--
	[sequoia::testing::regular_broken_greater<int, std::allocator<int> >]

	  operator> and operator< are inconsistent
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 54

	--Regular Semantics--
	[sequoia::testing::regular_broken_greatereq<int, std::allocator<int> >]

	  operator< and operator<= are inconsistent
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 60

	--Regular Semantics--
	[sequoia::testing::regular_inverted_comparisons<int, std::allocator<int> >]

	  Precondition - for ordered semantics, it is assumed that y > x
	  [bool]
	  check failed

	=======================================

	Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 66

	--Regular Semantics--
	[sequoia::testing::regular_broken_spaceship<int, std::allocator<int> >]

	  operator< and operator<=> are inconsistent
	  [bool]
	  check failed

	=======================================

	False Positive Failure:
	Tests/TestFramework/MoveOnlyTestDiagnostics.cpp, Line 50

	--Move-only Semantics--
	[sequoia::testing::move_only_beast<int, std::allocator<int> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/OrderableMoveOnlyTestDiagnostics.cpp, Line 86

	--Move-only Semantics--
	[sequoia::testing::orderable_move_only_beast<int, std::allocator<int> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/OrderableMoveOnlyTestDiagnostics.cpp, Line 87

	--Move-only Semantics--
	[sequoia::testing::orderable_move_only_beast<int, std::allocator<int> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 85

	--Regular Semantics--
	[sequoia::testing::orderable_regular_beast<int, std::allocator<int> >]


	=======================================

	False Positive Failure:
	Tests/TestFramework/OrderableRegularTestDiagnostics.cpp, Line 86

	--Regular Semantics--
	[sequoia::testing::orderable_regular_beast<int, std::allocator<int> >]


	=======================================

