	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 25:
	Empty sequence inequivalent to a single value

	Comparison performed using:
	[sequoia::testing::equivalence_checker<sequoia::maths::monotonic_sequence<int, std::__1::less<int>, std::__1::vector<int, std::__1::allocator<int> > > >]
	With equivalent types:
	[std::initializer_list<int>]

	Container size wrong
	[long]
	operator== returned false
	Obtained : 0
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 26:
	Non-empty sequence inequivalent to empty list

	Comparison performed using:
	[sequoia::testing::equivalence_checker<sequoia::maths::monotonic_sequence<int, std::__1::less<int>, std::__1::vector<int, std::__1::allocator<int> > > >]
	With equivalent types:
	[std::initializer_list<int>]

	Container size wrong
	[long]
	operator== returned false
	Obtained : 1
	Predicted: 0


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 27:
	Sequence of size one inequivalent to list with different value

	Comparison performed using:
	[sequoia::testing::equivalence_checker<sequoia::maths::monotonic_sequence<int, std::__1::less<int>, std::__1::vector<int, std::__1::allocator<int> > > >]
	With equivalent types:
	[std::initializer_list<int>]

	Element 0 of range incorrect
	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 28:
	Empty/non-empty sequences should compare different

	[sequoia::maths::monotonic_sequence<int, std::__1::less<int>, std::__1::vector<int, std::__1::allocator<int> > >]
	operator== returned false

	Size incorrect
	[unsigned long]
	operator== returned false
	Obtained : 0
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 30:
	Empty sequence should not report as non-empty

	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 31:
	Non-empty sequence should not report as empty

	[bool]
	operator== returned false
	Obtained : false
	Predicted: true


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 33:
	Empty sequence should not report non-zero size

	[unsigned long]
	operator== returned false
	Obtained : 0
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 34:
	Non-Eepty sequence should not report zero size

	[unsigned long]
	operator== returned false
	Obtained : 1
	Predicted: 0


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 36:
	Back element equal to 1 should not report as 2

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 37:
	Front element equal to 1 should not report as 2

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 38:
	Zeroth element equal to 1 should not report as 2

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 39:
	begin() pointing to 1 should not dereference as 2

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 40:
	cbegin() pointing to 1 should not dereference as 2

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 41:
	rbegin() pointing to 1 should not dereference as 2

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 42:
	crbegin() pointing to 1 should not dereference as 2

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 2


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 47:
	Sequences of size 1 with different elements should compare different

	[sequoia::maths::monotonic_sequence<int, std::__1::less<int>, std::__1::vector<int, std::__1::allocator<int> > >]
	operator== returned false

	Back element wrong
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	Front element wrong
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	Dereferenced iterator wrong for index 0
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	Dereferenced citerator wrong for index 0
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	operator[] wrong for index 0
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	Dereferenced riterator wrong for index 0
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	Dereferenced criterator wrong for index 0
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 52:
	Sequences of different sizes should compare different

	[sequoia::maths::monotonic_sequence<int, std::__1::less<int>, std::__1::vector<int, std::__1::allocator<int> > >]
	operator== returned false

	Size incorrect
	[unsigned long]
	operator== returned false
	Obtained : 2
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 57:
	Back element equal to 0 should not report as 1

	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 58:
	Front element equal to 0 should not report as 1

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 59:
	Zeroth element equal to 1 should not report as 1

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 60:
	First element equal to 0 should not report as 1

	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 61:
	begin() pointing to 1 should not dereference as 0

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 62:
	cbegin() pointing to 1 should not dereference as 0

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 63:
	rbegin() pointing to 0 should not dereference as 1

	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 64:
	crbegin() pointing to 0 should not dereference as 1

	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 65:
	iterator pointing to 0 should not dereference as 1

	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 66:
	citerator pointing to 0 should not dereference as 1

	[int]
	operator== returned false
	Obtained : 0
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 67:
	riterator pointing to 1 should not dereference as 0

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 68:
	criterator pointing to 1 should not dereference as 0

	[int]
	operator== returned false
	Obtained : 1
	Predicted: 0


	Element 1 of range incorrect
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 71:
	Inequivalent sequences of size two

	Comparison performed using:
	[sequoia::testing::equivalence_checker<sequoia::maths::monotonic_sequence<int, std::__1::less<int>, std::__1::vector<int, std::__1::allocator<int> > > >]
	With equivalent types:
	[std::initializer_list<int>]

	Element 0 of range incorrect
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 72:
	Sequences of size 2 with different elements should compare different

	[sequoia::maths::monotonic_sequence<int, std::__1::less<int>, std::__1::vector<int, std::__1::allocator<int> > >]
	operator== returned false

	Back element wrong
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0


	Front element wrong
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 1


	Dereferenced iterator wrong for index 0
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 1


	Dereferenced citerator wrong for index 0
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 1


	operator[] wrong for index 0
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 1


	Dereferenced riterator wrong for index 0
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 1


	Dereferenced criterator wrong for index 0
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 1


	Dereferenced iterator wrong for index 1
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0


	Dereferenced citerator wrong for index 1
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0


	operator[] wrong for index 1
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0


	Dereferenced riterator wrong for index 1
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 1


	Dereferenced criterator wrong for index 1
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 1


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 77:
	Sequences of size 2 with different final elements should compare different

	[sequoia::maths::monotonic_sequence<int, std::__1::less<int>, std::__1::vector<int, std::__1::allocator<int> > >]
	operator== returned false

	Back element wrong
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0


	Dereferenced iterator wrong for index 1
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0


	Dereferenced citerator wrong for index 1
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0


	operator[] wrong for index 1
	[int]
	operator== returned false
	Obtained : 2
	Predicted: 0


	../Tests/Maths/Sequences/MonotonicSequenceTestingDiagnostics.cpp, Line 82:
	Sequences of size 2 with different first elements should compare different

	[sequoia::maths::monotonic_sequence<int, std::__1::less<int>, std::__1::vector<int, std::__1::allocator<int> > >]
	operator== returned false

	Front element wrong
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 5


	Dereferenced iterator wrong for index 0
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 5


	Dereferenced citerator wrong for index 0
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 5


	operator[] wrong for index 0
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 5


	Dereferenced riterator wrong for index 0
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 5


	Dereferenced criterator wrong for index 0
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 5


	Dereferenced riterator wrong for index 1
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 5


	Dereferenced criterator wrong for index 1
	[int]
	operator== returned false
	Obtained : 3
	Predicted: 5


